"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }





var _chunkMMFOI5KYjs = require('./chunk-MMFOI5KY.js');

// src/cli.ts
var _process = require('process'); var _process2 = _interopRequireDefault(_process);
var _config = require('@tailwindcss-mangle/config');
var _cac = require('cac'); var _cac2 = _interopRequireDefault(_cac);
function init() {
  const cwd = _process2.default.cwd();
  return _config.initConfig.call(void 0, cwd);
}
var cli = _cac2.default.call(void 0, );
cli.command("install", "patch install").action(() => {
  const twPatcher = new (0, _chunkMMFOI5KYjs.TailwindcssPatcher)({
    patch: _chunkMMFOI5KYjs.getPatchOptions.call(void 0, )
  });
  twPatcher.patch();
});
cli.command("init").action(async () => {
  await init();
  _chunkMMFOI5KYjs.logger_default.success(`\u2728 ${_config.CONFIG_NAME}.config.ts initialized!`);
});
cli.command("extract").action(async () => {
  const { config } = await _config.getConfig.call(void 0, );
  if (config) {
    const twPatcher = new (0, _chunkMMFOI5KYjs.TailwindcssPatcher)(
      {
        patch: _chunkMMFOI5KYjs.defuOverrideArray.call(void 0, config.patch, {
          resolve: {
            paths: [_chunkMMFOI5KYjs.importMetaUrl]
          }
        })
      }
    );
    const p = await twPatcher.extract();
    p && _chunkMMFOI5KYjs.logger_default.success(`\u2728 tailwindcss-patch extract success! file path: ${p.filename}, classList length: ${p.classList.length}`);
  }
});
cli.help();
cli.parse();
