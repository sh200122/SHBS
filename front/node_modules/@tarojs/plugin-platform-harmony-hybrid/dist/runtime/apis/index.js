import definition from '@tarojs/plugin-platform-harmony-hybrid/dist/definition.json';
import isMatchWith from 'lodash-es/isMatchWith';
import setWith from 'lodash-es/setWith';
import './taro.js';
import './taro-h5.js';
import taro from '../../api/apis/taro.js';
export { Behavior, Current, ENV_TYPE, Events, Link, canIUseWebp, eventCenter, getEnv, history, initPxTransform, interceptorify, interceptors, options, preload, pxTransform, requirePlugin } from '../../api/apis/taro.js';
export { getAppInfo } from '@tarojs/taro-h5/dist/api/taro';
export { addCard, addFileToFavorites, addPhoneCalendar, addPhoneRepeatCalendar, addRecentColorSign, addVideoToFavorites, advancedGeneralIdentify, animalClassify, applyAddToMyApps, arrayBufferToBase64, authPrivateMessage, authorize, base64ToArrayBuffer, batchGetStorage, batchGetStorageSync, batchSetStorage, batchSetStorageSync, checkIsAddedToMyMiniProgram, checkIsOpenAccessibility, checkIsPictureInPictureActive, checkIsSupportFacialRecognition, checkSession, chooseAddress, chooseContact, chooseInvoice, chooseInvoiceTitle, chooseLicensePlate, chooseMessageFile, choosePoi, closeSocket, connectSocket, connectWifi, createAnimation, createBLEPeripheralServer, createInferenceSession, createLivePusherContext, createMediaAudioPlayer, createMediaContainer, createMediaQueryObserver, createMediaRecorder, createOffscreenCanvas, createRewardedVideoAd, createTCPSocket, createUDPSocket, createVKSession, createVideoContext, createVideoDecoder, createWebAudioContext, createWorker, cropImage, dishClassify, editImage, exitVoIPChat, faceDetect, faceVerifyForPay, getAvailableAudioSources, getBLEMTU, getBackgroundAudioManager, getBackgroundAudioPlayerState, getBackgroundFetchToken, getBatteryInfo, getBatteryInfoSync, getBeacons, getChannelsLiveInfo, getChannelsLiveNoticeInfo, getChannelsShareKey, getClipboardData, getDeviceVoIPList, getEnterOptionsSync, getExtConfig, getExtConfigSync, getGroupEnterInfo, getGuildInfo, getHCEState, getInferenceEnvInfo, getLocalIPAddress, getNFCAdapter, getNetworkType, getOpenUserInfo, getPerformance, getPrivacySetting, getQQRunData, getRandomValues, getRendererUserAgent, getScreenRecordingState, getSelectedTextRange, getSkylineInfo, getSkylineInfoSync, getSwanId, getUserCryptoManager, getUserProfile, getWeRunData, getWifiList, hideLoading, hideTabBar, hideTabBarRedDot, hideToast, imageAudit, initFaceDetect, initTabBarApis, isAddedToMyApps, isBluetoothDevicePaired, isVKSupport, join1v1Chat, joinVoIPChat, loadFontFace, logoClassify, makeBluetoothPair, navigateBack, navigateBackMiniProgram, navigateBackSmartProgram, navigateToMiniProgram, navigateToSmartGameProgram, navigateToSmartProgram, objectDetectIdentify, ocrBankCard, ocrDrivingLicense, ocrIdCard, ocrVehicleLicense, offAppHide, offAppShow, offAudioInterruptionBegin, offAudioInterruptionEnd, offBLECharacteristicValueChange, offBLEConnectionStateChange, offBLEMTUChange, offBLEPeripheralConnectionStateChanged, offBeaconServiceChange, offBeaconUpdate, offCopyUrl, offDeviceMotionChange, offError, offGyroscopeChange, offHCEMessage, offLocalServiceDiscoveryStop, offLocalServiceFound, offLocalServiceLost, offLocalServiceResolveFail, offNetworkStatusChange, offNetworkWeakChange, offPageNotFound, offScreenRecordingStateChanged, offThemeChange, offUnhandledRejection, offVoIPChatInterrupted, offVoIPChatMembersChanged, offVoIPChatSpeakersChanged, offVoIPChatStateChanged, offVoIPVideoMembersChanged, offWindowResize, onAppHide, onAppShow, onAudioInterruptionBegin, onAudioInterruptionEnd, onBLEMTUChange, onBLEPeripheralConnectionStateChanged, onBackgroundAudioPause, onBackgroundAudioPlay, onBackgroundAudioStop, onBackgroundFetchData, onBeaconServiceChange, onBeaconUpdate, onCopyUrl, onDeviceMotionChange, onError, onHCEMessage, onLocalServiceDiscoveryStop, onLocalServiceFound, onLocalServiceLost, onLocalServiceResolveFail, onNetworkStatusChange, onNetworkWeakChange, onPageNotFound, onScreenRecordingStateChanged, onSocketClose, onSocketError, onSocketMessage, onSocketOpen, onThemeChange, onUnhandledRejection, onVoIPChatInterrupted, onVoIPChatMembersChanged, onVoIPChatSpeakersChanged, onVoIPChatStateChanged, onVoIPVideoMembersChanged, onWindowResize, openBusinessView, openCard, openChannelsActivity, openChannelsEvent, openChannelsLive, openCustomerServiceChat, openEmbeddedMiniProgram, openPrivacyContract, openQzonePublish, openSystemBluetoothSetting, pageScrollTo, pauseBackgroundAudio, pauseVoice, plantClassify, playBackgroundAudio, playVoice, pluginLogin, preloadAssets, preloadSkylineView, preloadSubPackage, preloadWebview, reLaunch, redirectTo, removeTabBarBadge, reportEvent, reportMonitor, reportPerformance, requestDeviceVoIP, requestOrderPayment, requestPolymerPayment, requestSubscribeDeviceMessage, requirePrivacyAuthorize, reserveChannelsLive, saveFileToDisk, seekBackgroundAudio, sendHCEMessage, sendSms, sendSocketMessage, setBackgroundColor, setBackgroundTextStyle, setClipboardData, setCustomDress, setEnable1v1Chat, setInnerAudioOption, setOfficialDress, setPageInfo, setTabBarBadge, setTabBarItem, setTabBarStyle, setVisualEffectOnCapture, setWifiList, setWindowSize, shareFileMessage, shareToWeRun, shareVideoMessage, showActionSheet, showLoading, showModal, showRedPackage, showShareImageMenu, showTabBar, showTabBarRedDot, showToast, startBeaconDiscovery, startDeviceMotionListening, startFacialRecognitionVerify, startFacialRecognitionVerifyAndUploadVideo, startHCE, startLocalServiceDiscovery, startPullDownRefresh, startRecord, startWifi, stopBackgroundAudio, stopBeaconDiscovery, stopDeviceMotionListening, stopFaceDetect, stopHCE, stopLocalServiceDiscovery, stopPullDownRefresh, stopRecord, stopVoice, stopWifi, subscribeVoIPVideoMembers, switchTab, textReview, textToAudio, tradePay, updateQQApp, updateShareMenu, updateVoIPChatMuteConfig, updateWeChatApp } from '@tarojs/taro-h5';
export { createInterstitialAd } from '../../api/apis/ad/index.js';
export { setEnableDebug } from '../../api/apis/base/debug/setEnableDebug.js';
export { getRealtimeLogManager } from '../../api/apis/base/debug/getRealtimeLogManager.js';
export { getLogManager } from '../../api/apis/base/debug/getLogManager.js';
export { getAppAuthorizeSetting } from '../../api/apis/base/getAppAuthorizeSetting/index.js';
export { getSystemSetting } from '../../api/apis/base/getSystemSetting/index.js';
export { getAppBaseInfo, getDeviceInfo, getSystemInfo, getSystemInfoAsync, getSystemInfoSync, getWindowInfo, openAppAuthorizeSetting } from '../../api/apis/base/system.js';
export { getUpdateManager } from '../../api/apis/base/update/getUpdateManager.js';
export { getLaunchOptionsSync, initLaunchOptions } from '../../api/apis/base/weapp/life-cycle.js';
export { env } from '../../api/apis/base/index.js';
export { createCanvasContext } from '../../api/apis/canvas/createCanvasContext.js';
export { canvasToTempFilePath } from '../../api/apis/canvas/canvasToTempFilePath.js';
export { canvasPutImageData } from '../../api/apis/canvas/canvasPutImageData.js';
export { canvasGetImageData } from '../../api/apis/canvas/canvasGetImageData.js';
export { cloud } from '../../api/apis/cloud/index.js';
export { getExptInfoSync } from '../../api/apis/data-analysis/getExptInfoSync.js';
export { reportAnalytics } from '../../api/apis/data-analysis/reportAnalytics.js';
export { offAccelerometerChange } from '../../api/apis/device/accelerometer/offAccelerometerChange.js';
export { onAccelerometerChange } from '../../api/apis/device/accelerometer/onAccelerometerChange.js';
export { startAccelerometer } from '../../api/apis/device/accelerometer/startAccelerometer.js';
export { stopAccelerometer } from '../../api/apis/device/accelerometer/stopAccelerometer.js';
export { closeBluetoothAdapter } from '../../api/apis/device/bluetooth/closeBluetoothAdapter.js';
export { getBluetoothAdapterState } from '../../api/apis/device/bluetooth/getBluetoothAdapterState.js';
export { getBluetoothDevices } from '../../api/apis/device/bluetooth/getBluetoothDevices.js';
export { getConnectedBluetoothDevices } from '../../api/apis/device/bluetooth/getConnectedBluetoothDevices.js';
export { offBluetoothAdapterStateChange } from '../../api/apis/device/bluetooth/offBluetoothAdapterStateChange.js';
export { offBluetoothDeviceFound } from '../../api/apis/device/bluetooth/offBluetoothDeviceFound.js';
export { onBluetoothAdapterStateChange } from '../../api/apis/device/bluetooth/onBluetoothAdapterStateChange.js';
export { onBluetoothDeviceFound } from '../../api/apis/device/bluetooth/onBluetoothDeviceFound.js';
export { openBluetoothAdapter } from '../../api/apis/device/bluetooth/openBluetoothAdapter.js';
export { startBluetoothDevicesDiscovery } from '../../api/apis/device/bluetooth/startBluetoothDevicesDiscovery.js';
export { stopBluetoothDevicesDiscovery } from '../../api/apis/device/bluetooth/stopBluetoothDevicesDiscovery.js';
export { closeBLEConnection } from '../../api/apis/device/bluetooth-ble/closeBLEConnection.js';
export { createBLEConnection } from '../../api/apis/device/bluetooth-ble/createBLEConnection.js';
export { getBLEDeviceCharacteristics } from '../../api/apis/device/bluetooth-ble/getBLEDeviceCharacteristics.js';
export { getBLEDeviceRSSI } from '../../api/apis/device/bluetooth-ble/getBLEDeviceRSSI.js';
export { getBLEDeviceServices } from '../../api/apis/device/bluetooth-ble/getBLEDeviceServices.js';
export { notifyBLECharacteristicValueChange } from '../../api/apis/device/bluetooth-ble/notifyBLECharacteristicValueChange.js';
export { onBLECharacteristicValueChange } from '../../api/apis/device/bluetooth-ble/onBLECharacteristicValueChange.js';
export { onBLEConnectionStateChange } from '../../api/apis/device/bluetooth-ble/onBLEConnectionStateChange.js';
export { readBLECharacteristicValue } from '../../api/apis/device/bluetooth-ble/readBLECharacteristicValue.js';
export { setBLEMTU } from '../../api/apis/device/bluetooth-ble/setBLEMTU.js';
export { writeBLECharacteristicValue } from '../../api/apis/device/bluetooth-ble/writeBLECharacteristicValue.js';
export { offCompassChange } from '../../api/apis/device/compass/offCompassChange.js';
export { onCompassChange } from '../../api/apis/device/compass/onCompassChange.js';
export { startCompass } from '../../api/apis/device/compass/startCompass.js';
export { stopCompass } from '../../api/apis/device/compass/stopCompass.js';
export { addPhoneContact } from '../../api/apis/device/contact/addPhoneContact.js';
export { onGyroscopeChange } from '../../api/apis/device/gyroscope/onGyroscopeChange.js';
export { startGyroscope } from '../../api/apis/device/gyroscope/startGyroscope.js';
export { stopGyroscope } from '../../api/apis/device/gyroscope/stopGyroscope.js';
export { hideKeyboard } from '../../api/apis/device/keyBoard/hideKeyboard/index.js';
export { offKeyboardHeightChange } from '../../api/apis/device/keyBoard/offKeyboardHeightChange.js';
export { onKeyboardHeightChange } from '../../api/apis/device/keyBoard/onKeyboardHeightChange.js';
export { offMemoryWarning } from '../../api/apis/device/memory/offMemoryWarning.js';
export { onMemoryWarning } from '../../api/apis/device/memory/onMemoryWarning.js';
export { makePhoneCall } from '../../api/apis/device/phone/index.js';
export { scanCode } from '../../api/apis/device/scan.js';
export { getScreenBrightness } from '../../api/apis/device/screen/getScreenBrightness.js';
export { offUserCaptureScreen } from '../../api/apis/device/screen/offUserCaptureScreen.js';
export { onUserCaptureScreen } from '../../api/apis/device/screen/onUserCaptureScreen.js';
export { setKeepScreenOn } from '../../api/apis/device/screen/setKeepScreenOn.js';
export { setScreenBrightness } from '../../api/apis/device/screen/setScreenBrightness.js';
export { vibrateLong, vibrateShort } from '../../api/apis/device/vibrate.js';
export { getConnectedWifi } from '../../api/apis/device/wifi/getConnectedWifi.js';
export { offGetWifiList } from '../../api/apis/device/wifi/offGetWifiList.js';
export { offWifiConnected } from '../../api/apis/device/wifi/offWifiConnected.js';
export { offWifiConnectedWithPartialInfo } from '../../api/apis/device/wifi/offWifiConnectedWithPartialInfo.js';
export { onGetWifiList } from '../../api/apis/device/wifi/onGetWifiList.js';
export { onWifiConnected } from '../../api/apis/device/wifi/onWifiConnected.js';
export { onWifiConnectedWithPartialInfo } from '../../api/apis/device/wifi/onWifiConnectedWithPartialInfo.js';
export { getFileInfo } from '../../api/apis/files/getFileInfo.js';
export { getFileSystemManager } from '../../api/apis/files/getFileSystemManager.js';
export { getSavedFileInfo } from '../../api/apis/files/getSavedFileInfo.js';
export { getSavedFileList } from '../../api/apis/files/getSavedFileList.js';
export { openDocument } from '../../api/apis/files/openDocument.js';
export { removeSavedFile } from '../../api/apis/files/removeSavedFile.js';
export { saveFile } from '../../api/apis/files/saveFile.js';
export { getCurrentPages } from '@tarojs/router';
export { getApp, getCurrentInstance } from '../../api/apis/framework/index.js';
export { chooseLocation } from '../../api/apis/location/chooseLocation.js';
export { getFuzzyLocation } from '../../api/apis/location/getFuzzyLocation.js';
export { getLocation } from '../../api/apis/location/getLocation.js';
export { offLocationChange } from '../../api/apis/location/offLocationChange.js';
export { offLocationChangeError } from '../../api/apis/location/offLocationChangeError.js';
export { onLocationChange } from '../../api/apis/location/onLocationChange.js';
export { onLocationChangeError } from '../../api/apis/location/onLocationChangeError.js';
export { openLocation } from '../../api/apis/location/openLocation.js';
export { startLocationUpdate } from '../../api/apis/location/startLocationUpdate.js';
export { startLocationUpdateBackground } from '../../api/apis/location/startLocationUpdateBackground.js';
export { stopLocationUpdate } from '../../api/apis/location/stopLocationUpdate.js';
export { createAudioContext, createInnerAudioContext } from '../../api/apis/media/audio/index.js';
export { createCameraContext } from '../../api/apis/media/camera.js';
export { compressImage } from '../../api/apis/media/image/compressImage.js';
export { getImageInfo } from '../../api/apis/media/image/getImageInfo.js';
export { previewImage } from '../../api/apis/media/image/previewImage.js';
export { previewMedia } from '../../api/apis/media/image/previewMedia.js';
export { saveImageToPhotosAlbum } from '../../api/apis/media/image/saveImageToPhotosAlbum.js';
export { chooseImage } from '../../api/apis/media/image/chooseImage.js';
export { createLivePlayerContext } from '../../api/apis/media/live/index.js';
export { createMapContext } from '../../api/apis/media/map/index.js';
export { getRecorderManager } from '../../api/apis/media/recorder.js';
export { getVideoInfo } from '../../api/apis/media/video/getVideoInfo.js';
export { openVideoEditor } from '../../api/apis/media/video/openVideoEditor.js';
export { saveVideoToPhotosAlbum } from '../../api/apis/media/video/saveVideoToPhotosAlbum.js';
export { chooseVideo } from '../../api/apis/media/video/chooseVideo.js';
export { compressVideo } from '../../api/apis/media/video/compressVideo.js';
export { chooseMedia } from '../../api/apis/media/video/chooseMedia/index.js';
export { exitMiniProgram, navigateTo } from '../../api/apis/navigate/index.js';
export { downloadFile } from '../../api/apis/network/download.js';
export { addInterceptor, cleanInterceptors, request } from '../../api/apis/network/request/index.js';
export { uploadFile } from '../../api/apis/network/upload.js';
export { getAccountInfoSync } from '../../api/apis/open-api/account.js';
export { authorizeForMiniProgram } from '../../api/apis/open-api/authorize.js';
export { openChannelsUserProfile } from '../../api/apis/open-api/channels-live.js';
export { login } from '../../api/apis/open-api/login/login.js';
export { getSetting } from '../../api/apis/open-api/settings/getSetting.js';
export { openSetting } from '../../api/apis/open-api/settings/openSetting.js';
export { checkIsSoterEnrolledInDevice } from '../../api/apis/open-api/soter/checkIsSoterEnrolledInDevice.js';
export { checkIsSupportSoterAuthentication } from '../../api/apis/open-api/soter/checkIsSupportSoterAuthentication.js';
export { startSoterAuthentication } from '../../api/apis/open-api/soter/startSoterAuthentication.js';
export { requestSubscribeMessage } from '../../api/apis/open-api/subscribe-message.js';
export { getUserInfo } from '../../api/apis/open-api/user-info/getUserInfo.js';
export { requestPayment } from '../../api/apis/payment/requestPayment.js';
export { NativeDataCache, SyncCacheProxyHandler } from '../../api/apis/NativeApiSyncCacheProxy.js';
export { getShareInfo, hideShareMenu, showShareMenu } from '../../api/apis/share/index.js';
export { getBackgroundFetchData } from '../../api/apis/storage/getBackgroundFetchData.js';
export { setBackgroundFetchToken } from '../../api/apis/storage/setBackgroundFetchToken.js';
export { clearStorage, clearStorageSync, createBufferURL, createCacheManager, getStorage, getStorageInfo, getStorageInfoSync, getStorageSync, removeStorage, removeStorageSync, revokeBufferURL, setStorage, setStorageSync } from '../../api/apis/storage/index.js';
export { nextTick } from '../../api/apis/ui/custom-component.js';
export { disableAlertBeforeUnload, enableAlertBeforeUnload } from '../../api/apis/ui/interaction/index.js';
export { getMenuButtonBoundingClientRect } from '../../api/apis/ui/menu.js';
export { loadNavigationStyle, registerNavigationStyleHandler } from '../../api/apis/ui/navigation-bar/style-event.js';
export { hideHomeButton, hideNavigationBarLoading, setNavigationBarColor, setNavigationBarTitle, showNavigationBarLoading } from '../../api/apis/ui/navigation-bar/index.js';
export { setTopBarText } from '../../api/apis/ui/sticky.js';
export { createIntersectionObserver, createSelectorQuery } from '../../api/apis/wxml/index.js';

let list = null;
function canIUse(scheme = '') {
    /** Note: 此处方法仅作适配使用，用于避免 babel 无法识别的情况，比如通过变量传递的 scheme 等等
     * 同时，此处的 scheme 不包括在编译时写入的 hooks 等方法，故而不支持相关判断
     */
    if (list === null) {
        list = Object.assign(Object.assign({}, definition.apis), definition.components);
    }
    if (!scheme)
        return false;
    const o = setWith({}, scheme, true, Object);
    return isMatchWith(list, o, (a, b) => {
        if (a === '*' || b === true)
            return true;
    });
}

export { canIUse, taro as default };
//# sourceMappingURL=index.js.map
