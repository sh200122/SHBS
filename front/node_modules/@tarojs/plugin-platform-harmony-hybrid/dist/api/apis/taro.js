import Taro from '@tarojs/api';
import TaroH5 from '@tarojs/taro-h5/dist/api/taro';
export { getAppInfo } from '@tarojs/taro-h5/dist/api/taro';
import './index.js';
import native from './NativeApi.js';
import { navigateTo } from './navigate/index.js';
import { navigateBack, reLaunch, redirectTo, switchTab } from '@tarojs/taro-h5';
import { loadNavigationStyle, registerNavigationStyleHandler } from './ui/navigation-bar/style-event.js';
import { initLaunchOptions } from './base/weapp/life-cycle.js';
import { getCurrentInstance, getApp } from './framework/index.js';
import { nextTick } from './ui/custom-component.js';
import { getCurrentPages } from '@tarojs/router';

const requirePlugin = () => {
    return {
        world: '',
        hello: function () {
        }
    };
};
// 监听原生的Navigate方法
native.onNativeNavigate({
    nativeNavigateTo: (url) => {
        navigateTo({
            url: url,
            success: function () { }
        });
    },
    nativeNavigateBack: (delta) => {
        navigateBack({
            delta: delta
        });
    }
});
loadNavigationStyle();
registerNavigationStyleHandler();
// 同步小程序启动时的参数
Taro.eventCenter.once('__taroRouterLaunch', initLaunchOptions);
const { Behavior, getEnv, ENV_TYPE, Link, interceptors, interceptorify, Current, options, eventCenter, Events, preload, history, pxTransform, initPxTransform, canIUseWebp } = TaroH5;
const taro = {
    // @ts-ignore
    Behavior,
    getEnv,
    ENV_TYPE,
    Link,
    interceptors,
    interceptorify,
    Current,
    getCurrentInstance,
    options,
    nextTick,
    eventCenter,
    Events,
    preload,
    history,
    navigateBack,
    navigateTo,
    reLaunch,
    redirectTo,
    getCurrentPages,
    switchTab,
    requirePlugin,
    getApp
};

export { Behavior, Current, ENV_TYPE, Events, Link, canIUseWebp, taro as default, eventCenter, getEnv, history, initPxTransform, interceptorify, interceptors, options, preload, pxTransform, requirePlugin };
//# sourceMappingURL=taro.js.map
