{"version":3,"file":"handler.js","sources":["../../../../src/api/apis/utils/handler.ts"],"sourcesContent":["import { isFunction } from '@tarojs/shared'\n\ntype TCallback<T = Partial<TaroGeneral.CallbackResult>> = (res: T) => Promise<void> | void\ninterface IMethodParam<T = Partial<TaroGeneral.CallbackResult>> {\n  name: string\n  success?: TCallback<T & TaroGeneral.CallbackResult>\n  fail?: TCallback\n  complete?: TCallback\n}\ninterface IMockPromise {\n  resolve?: typeof Promise.resolve | TFunc\n  reject?: typeof Promise.reject | TFunc\n}\n\nexport class MethodHandler<T = Partial<TaroGeneral.CallbackResult>> {\n  methodName: string\n\n  protected __success?: TCallback<T>\n  protected __fail?: TCallback\n  protected __complete?: TCallback\n\n  protected isHandlerError = false\n\n  constructor ({ name, success, fail, complete }: IMethodParam<T>) {\n    this.methodName = name\n    this.__success = success\n    this.__fail = fail\n    this.__complete = complete\n\n    this.isHandlerError = isFunction(this.__complete) || isFunction(this.__fail)\n  }\n\n  success<U = Record<string, unknown>> (\n    res: Partial<T> & Partial<TaroGeneral.CallbackResult> = {},\n    promise: IMockPromise = {}\n  ): Promise<T & U & TaroGeneral.CallbackResult> {\n    if (!res.errMsg) {\n      res.errMsg = `${this.methodName}:ok`\n    }\n    isFunction(this.__success) && this.__success(res as T)\n    isFunction(this.__complete) && this.__complete(res)\n\n    const { resolve = Promise.resolve.bind(Promise) } = promise\n    return resolve(res as Required<T & U & TaroGeneral.CallbackResult>)\n  }\n\n  fail<U = Record<string, unknown>> (\n    res: Partial<T> & Partial<TaroGeneral.CallbackResult> = {},\n    promise: IMockPromise = {}\n  ): Promise<T & U & TaroGeneral.CallbackResult> {\n    if (!res.errMsg) {\n      res.errMsg = `${this.methodName}:fail`\n    } else {\n      res.errMsg = `${this.methodName}:fail ${res.errMsg}`\n    }\n    isFunction(this.__fail) && this.__fail(res)\n    isFunction(this.__complete) && this.__complete(res)\n\n    const { resolve = Promise.resolve.bind(Promise), reject = Promise.reject.bind(Promise) } = promise\n    return this.isHandlerError ? resolve(res as Required<T & U & TaroGeneral.CallbackResult>) : reject(res)\n  }\n}\n\ntype TCallbackManagerFunc<T extends unknown[] = unknown[]> = (...arr: T) => void\ninterface ICallbackManagerOption<T extends unknown[] = unknown[]> {\n  callback?: TCallbackManagerFunc<T>\n  ctx?: any\n  [key: string]: unknown\n}\ntype TCallbackManagerUnit<T extends unknown[] = unknown[]> = TCallbackManagerFunc<T> | ICallbackManagerOption<T>\n\nexport class CallbackManager<T extends unknown[] = unknown[]> {\n  callbacks: TCallbackManagerUnit<T>[] = []\n\n  /** 判断是否有相同的回调 */\n  hasSameCallback = (opt: TCallbackManagerUnit<T>) => {\n    return this.callbacks.indexOf(opt) !== -1\n  }\n\n  /** 添加不可重复的回调 */\n  addUnique = (opt?: TCallbackManagerUnit<T>) => {\n    if (opt && !this.hasSameCallback(opt)) this.callbacks.push(opt)\n  }\n\n  /** 添加回调 */\n  add = (opt?: TCallbackManagerUnit<T>) => {\n    if (opt) this.callbacks.push(opt)\n  }\n\n  /** 插入回调 */\n  insert = (start: number, opt?: TCallbackManagerUnit<T>) => {\n    if (opt) this.callbacks.splice(start, 0, opt)\n  }\n\n  /** 移除回调 */\n  remove = (opt?: TCallbackManagerUnit<T>) => {\n    if (opt) {\n      let pos = -1\n      this.callbacks.forEach((callback, k) => {\n        if (callback === opt) {\n          pos = k\n        }\n      })\n      if (pos > -1) {\n        this.callbacks.splice(pos, 1)\n      }\n    }\n  }\n\n  /** 移除每一个opt回调 */\n  removeEvery = (opt?: TCallbackManagerUnit<T>) => {\n    if (opt) {\n      this.callbacks = this.callbacks.filter((callback) => callback !== opt)\n    }\n  }\n\n  /** 移除所有回调 */\n  removeAll = () => {\n    this.callbacks = []\n  }\n\n  /** 获取回调函数数量 */\n  count = () => {\n    return this.callbacks.length\n  }\n\n  /** 触发回调 */\n  trigger = (...args: T) => {\n    this.callbacks.forEach((opt) => {\n      if (isFunction(opt)) {\n        opt(...args)\n      } else {\n        const { callback, ctx } = opt\n        isFunction(callback) && callback.call(ctx, ...args)\n      }\n    })\n  }\n}\n"],"names":[],"mappings":"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"}