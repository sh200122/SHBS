import { shouldBeObject, getParameterError } from '../utils/index.js';
import { MethodHandler } from '../utils/handler.js';
import native from '../NativeApi.js';

/**
 * 拉取 backgroundFetch 客户端缓存数据
 *
 * @canUse setBackgroundFetchToken
 * @__object [token]
 */
const setBackgroundFetchToken = function (options) {
    const name = 'setBackgroundFetchToken';
    // options must be an Object
    const isObject = shouldBeObject(options);
    // if (!isObject.flag) {
    //   const res = { errMsg: `${name}:fail ${isObject.msg}` }
    //   console.error(res.errMsg)
    //   return
    // }
    const { token, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    // token must be String
    if (!isObject.flag || typeof token !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'token',
                correct: 'string',
                wrong: token,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.setStorage({
            key: 'setStorageSync',
            data: 'token',
            success: (res) => {
                handle.success({ errMsg: res.errMsg }, { resolve, reject });
            },
            fail: (err) => {
                handle.fail({ errMsg: err.errMsg }, { resolve, reject });
            },
        });
    });
};

export { setBackgroundFetchToken };
//# sourceMappingURL=setBackgroundFetchToken.js.map
