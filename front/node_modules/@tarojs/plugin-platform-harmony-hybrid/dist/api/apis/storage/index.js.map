{"version":3,"file":"index.js","sources":["../../../../src/api/apis/storage/index.ts"],"sourcesContent":["import Taro from '@tarojs/api'\n\nimport native from '../NativeApi'\nimport { shouldBeObject, temporarilyNotSupport } from '../utils'\nimport { MethodHandler } from '../utils/handler'\nimport { handleData } from './util'\n\n/**\n * 创建缓存管理器\n *\n * @canNotUse createCacheManager\n */\nexport * from './background-fetch'\n\n// 周期性更新\nexport const createCacheManager = /* @__PURE__ */ temporarilyNotSupport('createCacheManager')\n\n/**\n * Taro.setStorage 的同步版本\n *\n * @canUse setStorageSync\n * @__object [key, data]\n */\nexport const setStorageSync: typeof Taro.setStorageSync = (key, data = '') => {\n  // @ts-ignore\n  native.setStorageSync(\n    {\n      key: key,\n      data: JSON.stringify(handleData(data))\n    })\n  // displayExecRes(status, setStorageSync.name)\n}\n\n/**\n * 将数据存储在本地缓存中指定的 key 中\n *\n * @canUse setStorage\n * @__object [data, key]\n */\n// @ts-ignore\nexport const setStorage: typeof Taro.setStorage = (options) => {\n  // options must be an Object\n  const isObject = shouldBeObject(options)\n  if (!isObject.flag) {\n    const res = { errMsg: `setStorage:fail ${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n  const { key, data, success, fail, complete } = options\n  const handle = new MethodHandler({ name: 'setStorage', success, fail, complete })\n\n  return new Promise((resolve, reject) => {\n    native.setStorage({\n      key: key,\n      data: JSON.stringify(handleData(data)),\n      success: (res: any) => {\n        handle.success({ errMsg: res.errMsg }, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail({ errMsg: err.errMsg }, { resolve, reject })\n      },\n    })\n  })\n}\n\n/**\n * 根据 URL 销毁存在内存中的数据\n *\n * @canNotUse revokeBufferURL\n */\nexport const revokeBufferURL = /* @__PURE__ */ temporarilyNotSupport('revokeBufferURL')\n\n/**\n * Taro.removeStorage 的同步版本\n *\n * @canUse removeStorageSync\n */\nexport const removeStorageSync: typeof Taro.removeStorageSync = (key: string) => {\n  // @ts-ignore\n  native.removeStorageSync({ key })\n  // displayExecRes(status, removeStorageSync.name)\n}\n\n/**\n * 从本地缓存中移除指定 key\n *\n * @canUse removeStorage\n * @__object [key]\n */\nexport const removeStorage: typeof Taro.removeStorage = (options: Taro.removeStorage.Option) => {\n  // options must be an Object\n  const isObject = shouldBeObject(options)\n  if (!isObject.flag) {\n    const res = { errMsg: `removeStorage:fail ${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n  const { key, success, fail, complete } = options\n  const handle = new MethodHandler({ name: 'removeStorage', success, fail, complete })\n\n  return new Promise((resolve, reject) => {\n    native.removeStorage({\n      key: key,\n      success: (res: any) => {\n        handle.success({ errMsg: res.errMsg }, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail({ errMsg: err.errMsg }, { resolve, reject })\n      },\n    })\n  })\n}\n\n/**\n * Taro.getStorage 的同步版本\n *\n * @canUse getStorageSync\n */\n// @ts-ignore\nexport const getStorageSync: typeof Taro.getStorageSync = (key) => {\n  const res = native.getStorageSync({ key })\n  // 存储数据时，会把真实的数据包裹成{data: xxx} 的json格式\n  let item: any\n  try {\n    item = JSON.parse(res.data)\n  } catch (e) {\n    item = { data: '' }\n  }\n  return item.data\n}\n\n/**\n * 从本地缓存中异步获取指定 key 的内容\n *\n * @canUse getStorage\n * @__object [key]\n * @__success [data]\n */\nexport const getStorage: typeof Taro.getStorage = <T>(options) => {\n  // options must be an Object\n  const isObject = shouldBeObject(options)\n  if (!isObject.flag) {\n    const res = { errMsg: `getStorage:fail ${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n\n  const { key, success, fail, complete } = options\n  const handle = new MethodHandler<Taro.getStorage.SuccessCallbackResult<T>>({\n    name: 'getStorage',\n    success,\n    fail,\n    complete,\n  })\n\n  return new Promise((resolve, reject) => {\n    native.getStorage({\n      key: key,\n      success: (res: any) => {\n        let item: any\n        try {\n          item = JSON.parse(res.data)\n        } catch (e) {\n          item = { data: '' }\n        }\n        const result: Taro.getStorage.SuccessCallbackResult<T> = {\n          data: item.data,\n          errMsg: res.errMsg,\n        }\n        handle.success(result, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail({ errMsg: err.errMsg }, { resolve, reject })\n      },\n    })\n  })\n}\n\n/**\n * Taro.getStorageInfo 的同步版本\n *\n * @canNotUse getStorageInfoSync\n * @__return [currentSize, keys, limitSize]\n */\nexport const getStorageInfoSync = temporarilyNotSupport('getStorageInfoSync')\n\n/**\n * 异步获取当前storage的相关信息\n *\n * @canUse getStorageInfo\n * @__success [currentSize, keys, limitSize]\n */\nexport const getStorageInfo: typeof Taro.getStorageInfo = ({ success, fail, complete } = {}) => {\n  const handle = new MethodHandler<Taro.getStorageInfo.SuccessCallbackOption>({\n    name: 'getStorageInfo',\n    success,\n    fail,\n    complete,\n  })\n\n  return new Promise((resolve, reject) => {\n    native.getStorageInfo({\n      success: (res: any) => {\n        const result: Taro.getStorageInfoSync.Option = {\n          keys: res.keys,\n          limitSize: NaN,\n          currentSize: NaN,\n        }\n        handle.success(result, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail({ errMsg: err.errMsg }, { resolve, reject })\n      },\n    })\n  })\n}\n\n/**\n * 根据传入的 buffer 创建一个唯一的 URL 存在内存中\n *\n * @canNotUse createBufferURL\n */\nexport const createBufferURL = /* @__PURE__ */ temporarilyNotSupport('createBufferURL')\n\n/**\n * Taro.clearStorage 的同步版本\n *\n * @canUse clearStorageSync\n */\nexport const clearStorageSync: typeof Taro.clearStorageSync = () => {\n  // @ts-ignore\n  native.clearStorageSync({ key: '' })\n  // displayExecRes(status, clearStorageSync.name)\n}\n\n/**\n * 清除storage信息\n *\n * @canUse clearStorage\n */\nexport const clearStorage: typeof Taro.clearStorage = ({ success, fail, complete } = {}) => {\n  const handle = new MethodHandler({ name: 'clearStorage', success, fail, complete })\n\n  return new Promise((resolve, reject) => {\n    native.clearStorage({\n      success: () => {\n        handle.success({ errMsg: 'ok' }, { reject, resolve })\n      },\n      fail: (err: any) => {\n        handle.fail({ errMsg: err.errMsg }, { reject, resolve })\n      },\n    })\n  })\n}\n\n// @ts-ignore\nexport * from './background-fetch'\n"],"names":[],"mappings":"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"}