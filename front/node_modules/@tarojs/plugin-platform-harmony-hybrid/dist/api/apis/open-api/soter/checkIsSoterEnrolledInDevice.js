import native from '../../NativeApi.js';
import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';

/**
 * 获取设备内是否录入如指纹等生物信息的接口
 *
 * @canUse checkIsSoterEnrolledInDevice
 * @__object [checkAuthMode]
 * @__success [isEnrolled, errMsg]
 */
const checkIsSoterEnrolledInDevice = (options) => {
    const name = 'checkIsSoterEnrolledInDevice';
    return new Promise((resolve, reject) => {
        // options must be an Object
        const isObject = shouldBeObject(options);
        if (!isObject.flag) {
            const res = { errMsg: `${name}:fail ${isObject.msg}` };
            console.error(res.errMsg);
            return Promise.reject(res);
        }
        const { checkAuthMode, success, fail, complete } = options;
        const handle = new MethodHandler({ name, success, fail, complete });
        if (typeof checkAuthMode !== 'string') {
            return handle.fail({
                errMsg: getParameterError({
                    para: 'checkAuthMode',
                    correct: 'string',
                    wrong: checkAuthMode,
                }),
            }, { resolve, reject });
        }
        native.checkIsSupportSoterAuthentication({
            checkAuthMode: checkAuthMode,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { checkIsSoterEnrolledInDevice };
//# sourceMappingURL=checkIsSoterEnrolledInDevice.js.map
