{"version":3,"file":"CanvasContext.js","sources":["../../../../src/api/apis/canvas/CanvasContext.ts"],"sourcesContent":["import Taro, { CanvasGradient } from '@tarojs/api'\n\nimport native from '../NativeApi'\n\ninterface IAction {\n  func: (...arr: any[]) => void\n  args: any[]\n}\n\nconst TextBaseLineMap: Record<keyof Taro.CanvasContext.TextBaseline, CanvasTextBaseline> = {\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'middle',\n  normal: 'alphabetic',\n  hanging: 'hanging',\n  alphabetic: 'alphabetic',\n  ideographic: 'ideographic',\n}\n\n/**\n * canvas 组件的绘图上下文\n *\n * @canUse CanvasContext\n * @__class\n * [arc, arcTo, beginPath, bezierCurveTo, clearRect, clip, closePath, createCircularGradient, createLinearGradient, createPattern,\\\n * draw, drawImage, fill, fillRect, fillText, lineTo, measureText, moveTo, quadraticCurveTo, rect,\\\n * restore, rotate, save, scale, setFillStyle, setFontSize, setGlobalAlpha, setLineCap, setLineDash,\\\n * setLineJoin, setLineWidth, setMiterLimit, setShadow, setStrokeStyle, setTextAlign, setTextBaseline, setTransform, stroke, strokeRect,\\\n * strokeText, transform, translate]\n */\nexport class CanvasContext implements Taro.CanvasContext {\n  __raw__: CanvasRenderingContext2D\n  actions: IAction[] = []\n\n  constructor (canvas, ctx) {\n    this.canvas = canvas\n    this.ctx = ctx\n  }\n\n  set ctx (e: CanvasRenderingContext2D) {\n    this.__raw__ = e\n  }\n\n  get ctx () {\n    return this.__raw__ || {}\n  }\n\n  canvas: HTMLCanvasElement\n\n  protected emptyActions () {\n    this.actions.length = 0\n  }\n\n  protected enqueueActions (func: IAction['func'], ...args) {\n    this.actions.push({\n      func,\n      args,\n    })\n  }\n\n  set fillStyle (e) {\n    this.enqueueActions(() => {\n      this.ctx.fillStyle = e\n    })\n  }\n\n  get fillStyle () {\n    return this.ctx.fillStyle as string\n  }\n\n  set font (e) {\n    this.ctx.font = e\n  }\n\n  get font () {\n    return this.ctx.font\n  }\n\n  set globalAlpha (e) {\n    this.enqueueActions(() => {\n      this.ctx.globalAlpha = e\n    })\n  }\n\n  get globalAlpha () {\n    return this.ctx.globalAlpha\n  }\n\n  set globalCompositeOperation (e) {\n    this.enqueueActions(() => {\n      this.ctx.globalCompositeOperation = e\n    })\n  }\n\n  get globalCompositeOperation () {\n    return this.ctx.globalCompositeOperation\n  }\n\n  set lineCap (e) {\n    this.enqueueActions(() => {\n      this.ctx.lineCap = e\n    })\n  }\n\n  get lineCap () {\n    return this.ctx.lineCap\n  }\n\n  set lineDashOffset (e) {\n    this.enqueueActions(() => {\n      this.ctx.lineDashOffset = e\n    })\n  }\n\n  get lineDashOffset () {\n    return this.ctx.lineDashOffset\n  }\n\n  set lineJoin (e) {\n    this.enqueueActions(() => {\n      this.ctx.lineJoin = e\n    })\n  }\n\n  get lineJoin () {\n    return this.ctx.lineJoin\n  }\n\n  set lineWidth (e) {\n    this.enqueueActions(() => {\n      this.ctx.lineWidth = e\n    })\n  }\n\n  get lineWidth () {\n    return this.ctx.lineWidth\n  }\n\n  set miterLimit (e) {\n    this.enqueueActions(() => {\n      this.ctx.miterLimit = e\n    })\n  }\n\n  get miterLimit () {\n    return this.ctx.miterLimit\n  }\n\n  set shadowBlur (e) {\n    this.enqueueActions(() => {\n      this.ctx.shadowBlur = e\n    })\n  }\n\n  get shadowBlur () {\n    return this.ctx.shadowBlur\n  }\n\n  set shadowColor (e) {\n    this.enqueueActions(() => {\n      this.ctx.shadowColor = e\n    })\n  }\n\n  get shadowColor () {\n    return this.ctx.shadowColor\n  }\n\n  set shadowOffsetX (e) {\n    this.enqueueActions(() => {\n      this.ctx.shadowOffsetX = e\n    })\n  }\n\n  get shadowOffsetX () {\n    return this.ctx.shadowOffsetX\n  }\n\n  set shadowOffsetY (e) {\n    this.enqueueActions(() => {\n      this.ctx.shadowOffsetY = e\n    })\n  }\n\n  get shadowOffsetY () {\n    return this.ctx.shadowOffsetY\n  }\n\n  set strokeStyle (e) {\n    this.enqueueActions(() => {\n      this.ctx.strokeStyle = e\n    })\n  }\n\n  get strokeStyle () {\n    return this.ctx.strokeStyle as string\n  }\n\n  /** 小程序文档中不包括 ↓↓↓ */\n  set textAlign (e) {\n    this.ctx.textAlign = e\n  }\n\n  get textAlign () {\n    return this.ctx.textAlign\n  }\n\n  set textBaseline (e) {\n    this.ctx.textBaseline = e\n  }\n\n  get textBaseline () {\n    return this.ctx.textBaseline\n  }\n\n  set direction (e) {\n    this.ctx.direction = e\n  }\n\n  get direction () {\n    return this.ctx.direction\n  }\n\n  set imageSmoothingEnabled (e) {\n    this.enqueueActions(() => {\n      this.ctx.imageSmoothingEnabled = e\n    })\n  }\n\n  get imageSmoothingEnabled () {\n    return this.ctx.imageSmoothingEnabled\n  }\n\n  set imageSmoothingQuality (e) {\n    this.enqueueActions(() => {\n      this.ctx.imageSmoothingQuality = e\n    })\n  }\n\n  get imageSmoothingQuality () {\n    return this.ctx.imageSmoothingQuality\n  }\n\n  set filter (e) {\n    this.enqueueActions(() => {\n      this.ctx.filter = e\n    })\n  }\n\n  get filter () {\n    return this.ctx.filter\n  }\n  /** 小程序文档中不包括 ↑↑↑ */\n\n  arc (...args) {\n    return this.enqueueActions(this.ctx.arc, ...args)\n  }\n\n  arcTo (...args) {\n    return this.enqueueActions(this.ctx.arcTo, ...args)\n  }\n\n  beginPath (...args) {\n    return this.enqueueActions(this.ctx.beginPath, ...args)\n  }\n\n  bezierCurveTo (...args) {\n    return this.enqueueActions(this.ctx.bezierCurveTo, ...args)\n  }\n\n  clearRect (...args) {\n    return this.enqueueActions(this.ctx.clearRect, ...args)\n  }\n\n  clip (...args) {\n    return this.enqueueActions(this.ctx.clip, ...args)\n  }\n\n  closePath (...args) {\n    return this.enqueueActions(this.ctx.closePath, ...args)\n  }\n\n  createPattern (\n    imageResource: string,\n    repetition: keyof Taro.CanvasContext.Repetition\n  ): CanvasPattern | null | Promise<CanvasPattern | null> {\n    // 需要转换为 Image\n    if (typeof imageResource === 'string') {\n      const img = new Image()\n      img.src = imageResource\n      return new Promise<CanvasPattern | null>((resolve, reject) => {\n        img.onload = () => {\n          resolve(this.ctx.createPattern(img, repetition))\n        }\n        img.onerror = reject\n      })\n    }\n    return this.ctx.createPattern(imageResource, repetition)\n  }\n\n  /**\n   * 将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中。\n   * @todo 每次 draw 都会读取 width 和 height\n   */\n  async draw (reserve?: boolean, callback?: (...args: any[]) => any): Promise<void> {\n    try {\n      if (!reserve) {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      }\n\n      // 部分 action 是异步的\n      for (const { func, args } of this.actions) {\n        await func.apply(this.ctx, args)\n      }\n\n      this.emptyActions()\n      callback && callback()\n    } catch (e) {\n      /* eslint-disable no-throw-literal */\n      throw {\n        errMsg: e.message,\n      }\n    }\n  }\n\n  drawImage (imageResource: string, ...extra: any[]): void {\n    // 如果是本地file://开头的文件路径，需要先转换为internal://开头的沙箱路径\n    if (imageResource.startsWith('file://')) {\n      imageResource = native.copyFileToSandboxCache(imageResource).internalCachePath\n    }\n    type TExtra = [number, number]\n    this.enqueueActions(() => {\n      // 需要转换为 Image\n      if (typeof imageResource === 'string') {\n        const img = new Image()\n        img.src = imageResource\n        return new Promise<void>((resolve, reject) => {\n          img.onload = () => {\n            this.ctx.drawImage(img, ...(extra as TExtra))\n            resolve()\n          }\n          img.onerror = reject\n        })\n      }\n\n      this.ctx.drawImage(imageResource, ...(extra as TExtra))\n    })\n  }\n\n  fill (...args) {\n    return this.enqueueActions(this.ctx.fill, ...args)\n  }\n\n  fillRect (...args) {\n    return this.enqueueActions(this.ctx.fillRect, ...args)\n  }\n\n  fillText (...args) {\n    return this.enqueueActions(this.ctx.fillText, ...args)\n  }\n\n  lineTo (...args) {\n    return this.enqueueActions(this.ctx.lineTo, ...args)\n  }\n\n  moveTo (...args) {\n    return this.enqueueActions(this.ctx.moveTo, ...args)\n  }\n\n  quadraticCurveTo (...args) {\n    return this.enqueueActions(this.ctx.quadraticCurveTo, ...args)\n  }\n\n  rect (...args) {\n    return this.enqueueActions(this.ctx.rect, ...args)\n  }\n\n\n  reset () {\n    // @ts-ignore\n    return this.ctx.reset()\n  }\n\n  restore (...args) {\n    return this.enqueueActions(this.ctx.restore, ...args)\n  }\n\n  rotate (...args) {\n    return this.enqueueActions(this.ctx.rotate, ...args)\n  }\n\n  save (...args) {\n    return this.enqueueActions(this.ctx.save, ...args)\n  }\n\n  scale (...args) {\n    return this.enqueueActions(this.ctx.scale, ...args)\n  }\n\n  setFillStyle (color: string | CanvasGradient): void {\n    this.enqueueActions(() => {\n      this.ctx.fillStyle = color\n    })\n  }\n\n  setFontSize (fontSize: number): void {\n    this.enqueueActions(() => {\n      this.ctx.font = `${fontSize}px sans-serif`\n    })\n  }\n\n  setGlobalAlpha (alpha: number): void {\n    this.enqueueActions(() => {\n      this.ctx.globalAlpha = alpha\n    })\n  }\n\n  setLineCap (lineCap: keyof Taro.CanvasContext.LineCap): void {\n    this.enqueueActions(() => {\n      this.ctx.lineCap = lineCap\n    })\n  }\n\n  setLineDash (pattern: number[], offset: number): void {\n    this.enqueueActions(() => {\n      this.ctx.setLineDash(pattern)\n      this.ctx.lineDashOffset = offset\n    })\n  }\n\n  setLineJoin (lineJoin: keyof Taro.CanvasContext.LineJoin): void {\n    this.enqueueActions(() => {\n      this.ctx.lineJoin = lineJoin\n    })\n  }\n\n  setLineWidth (lineWidth: number): void {\n    this.enqueueActions(() => {\n      this.ctx.lineWidth = lineWidth\n    })\n  }\n\n  setMiterLimit (miterLimit: number): void {\n    this.enqueueActions(() => {\n      this.ctx.miterLimit = miterLimit\n    })\n  }\n\n  setShadow (offsetX: number, offsetY: number, blur: number, color: string): void {\n    this.enqueueActions(() => {\n      this.ctx.shadowOffsetX = offsetX\n      this.ctx.shadowOffsetY = offsetY\n      this.ctx.shadowColor = color\n      this.ctx.shadowBlur = blur\n    })\n  }\n\n  setStrokeStyle (color: string | CanvasGradient): void {\n    this.enqueueActions(() => {\n      this.ctx.strokeStyle = color\n    })\n  }\n\n  setTextAlign (align: keyof Taro.CanvasContext.Align): void {\n    this.enqueueActions(() => {\n      this.ctx.textAlign = align\n    })\n  }\n\n  setTextBaseline (textBaseline: keyof Taro.CanvasContext.TextBaseline): void {\n    this.enqueueActions(() => {\n      this.ctx.textBaseline = TextBaseLineMap[textBaseline] || 'alphabetic'\n    })\n  }\n\n  setTransform (...args) {\n    return this.enqueueActions(this.ctx.setTransform, ...args)\n  }\n\n  stroke (...args) {\n    return this.enqueueActions(this.ctx.stroke, ...args)\n  }\n\n  strokeRect (...args) {\n    return this.enqueueActions(this.ctx.strokeRect, ...args)\n  }\n\n  strokeText (...args) {\n    return this.enqueueActions(this.ctx.strokeText, ...args)\n  }\n\n  transform (...args) {\n    return this.enqueueActions(this.ctx.transform, ...args)\n  }\n\n  translate (...args) {\n    return this.enqueueActions(this.ctx.translate, ...args)\n  }\n\n  measureText (text: string): TextMetrics {\n    return this.ctx.measureText(text)\n  }\n\n  createCircularGradient (x: number, y: number, r: number): CanvasGradient {\n    const radialGradient = this.ctx.createRadialGradient(x, y, 0, x, y, r)\n\n    return radialGradient\n  }\n\n  createLinearGradient (x0: number, y0: number, x1: number, y1: number): CanvasGradient {\n    return this.ctx.createLinearGradient(x0, y0, x1, y1)\n  }\n}\n"],"names":[],"mappings":"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"}