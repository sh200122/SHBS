{"version":3,"file":"index.js","sources":["../../../../src/api/apis/wxml/index.ts"],"sourcesContent":["import Taro from '@tarojs/api'\n\nimport { TaroHarmonyHybridIntersectionObserver } from './IntersectionObserver'\nimport { SelectorQuery } from './selectorQuery'\n\n/**\n * 返回一个 SelectorQuery 对象实例\n *\n * @canUse createSelectorQuery\n */\n\nexport const createSelectorQuery: typeof Taro.createSelectorQuery = () => {\n  return new SelectorQuery()\n}\n\n/**\n * 创建并返回一个 IntersectionObserver 对象实例\n *\n * @canUse createIntersectionObserver\n */\nexport const createIntersectionObserver: typeof Taro.createIntersectionObserver = (component, options) => {\n  return new TaroHarmonyHybridIntersectionObserver(component, options)\n}\n\n/**\n * IntersectionObserver 对象，用于推断某些节点是否可以被用户看见、有多大比例可以被用户看见\n *\n * @canUse IntersectionObserver\n * @__class [disconnect, observe, relativeTo, relativeToViewport]\n */\n\n/**\n * 创建并返回一个 MediaQueryObserver 对象实例\n *\n * @canUse createMediaQueryObserver\n */\nexport { createMediaQueryObserver } from '@tarojs/taro-h5'\n\n/**\n * MediaQueryObserver 对象，用于监听页面 media query 状态的变化，如界面的长宽是不是在某个指定的范围内\n *\n * @canUse MediaQueryObserver\n * @__class [observe, disconnect]\n */\n\n/**\n * Snapshot 实例，可通过 SelectorQuery 获取。\n *\n * @canNotUse Snapshot\n */\n"],"names":[],"mappings":";;;;AAKA;;;;AAIG;AAEI,MAAM,mBAAmB,GAAoC,MAAK;IACvE,OAAO,IAAI,aAAa,EAAE,CAAA;AAC5B,EAAC;AAED;;;;AAIG;MACU,0BAA0B,GAA2C,CAAC,SAAS,EAAE,OAAO,KAAI;AACvG,IAAA,OAAO,IAAI,qCAAqC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;AACtE,EAAC;AAgBD;;;;;AAKG;AAEH;;;;AAIG;;;;"}