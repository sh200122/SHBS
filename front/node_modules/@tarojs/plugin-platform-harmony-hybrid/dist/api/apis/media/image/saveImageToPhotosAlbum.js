import native from '../../NativeApi.js';
import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';

/**
 * 保存图片到系统相册
 *
 * @canUse saveImageToPhotosAlbum
 * @__object [filePath]
 */
const saveImageToPhotosAlbum = (options) => {
    const methodName = 'saveImageToPhotosAlbum';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${methodName}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { filePath, success, fail, complete } = options;
    const handle = new MethodHandler({ name: methodName, success, fail, complete });
    if (typeof filePath !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'filePath',
                correct: 'String',
                wrong: filePath,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.saveImageToPhotosAlbum({
            filePath: filePath,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { saveImageToPhotosAlbum };
//# sourceMappingURL=saveImageToPhotosAlbum.js.map
