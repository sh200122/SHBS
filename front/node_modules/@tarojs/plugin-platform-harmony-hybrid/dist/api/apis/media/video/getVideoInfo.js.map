{"version":3,"file":"getVideoInfo.js","sources":["../../../../../src/api/apis/media/video/getVideoInfo.ts"],"sourcesContent":["import Taro from '@tarojs/taro'\n\nimport native from '../../NativeApi'\nimport { getParameterError, shouldBeObject } from '../../utils'\nimport { MethodHandler } from '../../utils/handler'\n/**\n * 获取视频详细信息\n *\n * @canUse getVideoInfo\n * @__object [src]\n * @__success\n * [orientation[up, down, left, right, up-mirrored, down-mirrored, left-mirrored, right-mirrored],\\\n * type, duration, size, height, width, fps, bitrate]\n */\nexport const getVideoInfo: typeof Taro.getVideoInfo = (options) => {\n  const name = 'getVideoInfo'\n  const FPS_NUM = 30\n\n  // options must be an Object\n  const isObject = shouldBeObject(options)\n  if (!isObject.flag) {\n    const res = { errMsg: `${name}:fail ${isObject.msg}` }\n    console.error(res.errMsg)\n    return Promise.reject(res)\n  }\n\n  const { src, success, fail, complete } = options as Exclude<typeof options, undefined>\n  const handle = new MethodHandler<{\n    orientation?: any\n    type?: string\n    duration?: number\n    size?: number\n    height?: number\n    width?: number\n    fps?: number\n    bitrate?: number\n  }>({ name, success, fail, complete })\n\n  // options.url must be String\n  if (typeof src !== 'string') {\n    return handle.fail({\n      errMsg: getParameterError({\n        para: 'src',\n        correct: 'string',\n        wrong: src,\n      }),\n    })\n  }\n\n  return new Promise<Taro.getVideoInfo.SuccessCallbackResult>((resolve, reject) => {\n    native.getVideoInfo({\n      src: src,\n      success: (res: any) => {\n        const result: Taro.getVideoInfo.SuccessCallbackResult = {\n          orientation: res.orientation,\n          type: res.type,\n          duration: res.duration,\n          size: res.size,\n          height: res.height,\n          width: res.width,\n          fps: FPS_NUM,\n          bitrate: res.bitrate,\n          errMsg: res.errMsg,\n        }\n        handle.success(result, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail(err, { resolve, reject })\n      },\n    })\n  })\n}\n"],"names":[],"mappings":";;;;AAKA;;;;;;;;AAQG;AACU,MAAA,YAAY,GAA6B,CAAC,OAAO,KAAI;IAChE,MAAM,IAAI,GAAG,cAAc,CAAA;IAC3B,MAAM,OAAO,GAAG,EAAE,CAAA;;AAGlB,IAAA,MAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,CAAA;AACxC,IAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClB,QAAA,MAAM,GAAG,GAAG,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAA,MAAA,EAAS,QAAQ,CAAC,GAAG,CAAA,CAAE,EAAE,CAAA;AACtD,QAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACzB,QAAA,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;KAC3B;IAED,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAA6C,CAAA;AACtF,IAAA,MAAM,MAAM,GAAG,IAAI,aAAa,CAS7B,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;;AAGrC,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,MAAM,CAAC,IAAI,CAAC;YACjB,MAAM,EAAE,iBAAiB,CAAC;AACxB,gBAAA,IAAI,EAAE,KAAK;AACX,gBAAA,OAAO,EAAE,QAAQ;AACjB,gBAAA,KAAK,EAAE,GAAG;aACX,CAAC;AACH,SAAA,CAAC,CAAA;KACH;IAED,OAAO,IAAI,OAAO,CAA0C,CAAC,OAAO,EAAE,MAAM,KAAI;QAC9E,MAAM,CAAC,YAAY,CAAC;AAClB,YAAA,GAAG,EAAE,GAAG;AACR,YAAA,OAAO,EAAE,CAAC,GAAQ,KAAI;AACpB,gBAAA,MAAM,MAAM,GAA4C;oBACtD,WAAW,EAAE,GAAG,CAAC,WAAW;oBAC5B,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,QAAQ,EAAE,GAAG,CAAC,QAAQ;oBACtB,IAAI,EAAE,GAAG,CAAC,IAAI;oBACd,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,KAAK,EAAE,GAAG,CAAC,KAAK;AAChB,oBAAA,GAAG,EAAE,OAAO;oBACZ,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,MAAM,EAAE,GAAG,CAAC,MAAM;iBACnB,CAAA;gBACD,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;aAC5C;AACD,YAAA,IAAI,EAAE,CAAC,GAAQ,KAAI;gBACjB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;aACtC;AACF,SAAA,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ;;;;"}