import native from '../../NativeApi.js';
import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';

/**
 * 获取视频详细信息
 *
 * @canUse getVideoInfo
 * @__object [src]
 * @__success
 * [orientation[up, down, left, right, up-mirrored, down-mirrored, left-mirrored, right-mirrored],\
 * type, duration, size, height, width, fps, bitrate]
 */
const getVideoInfo = (options) => {
    const name = 'getVideoInfo';
    const FPS_NUM = 30;
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { src, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    // options.url must be String
    if (typeof src !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'src',
                correct: 'string',
                wrong: src,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.getVideoInfo({
            src: src,
            success: (res) => {
                const result = {
                    orientation: res.orientation,
                    type: res.type,
                    duration: res.duration,
                    size: res.size,
                    height: res.height,
                    width: res.width,
                    fps: FPS_NUM,
                    bitrate: res.bitrate,
                    errMsg: res.errMsg,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { getVideoInfo };
//# sourceMappingURL=getVideoInfo.js.map
