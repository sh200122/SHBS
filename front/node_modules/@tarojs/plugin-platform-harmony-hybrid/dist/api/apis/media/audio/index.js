import { NativeInnerAudioContext } from '../../interface/NativeAContextApi.js';
import { AudioContext } from './AudioContext.js';
import { InnerAudioContext } from './InnerAudioContext.js';
export { createMediaAudioPlayer, createWebAudioContext, getAvailableAudioSources, pauseVoice, playVoice, setInnerAudioOption, stopVoice } from '@tarojs/taro-h5';

/**
 * 创建内部 audio 上下文 InnerAudioContext 对象。
 *
 * @canUse createInnerAudioContext
 */
// @ts-ignore
const createInnerAudioContext = (options) => {
    if (options && typeof options === 'object' && options.useWebAudioImplement) {
        return new InnerAudioContext();
    }
    else {
        return NativeInnerAudioContext.createInnerAudioContext();
    }
};
/**
 * 创建 audio 上下文 AudioContext 对象
 *
 * @canUse createAudioContext
 */
const createAudioContext = () => new AudioContext();
/**
 * AudioBuffer 接口表示存在内存里的一段短小的音频资源
 *
 * @canNotUse AudioBuffer
 */
/**
 * MediaAudioPlayer 实例
 *
 * @canNotUse MediaAudioPlayer
 */
/**
 * WebAudioContext 实例
 *
 * @canNotUse WebAudioContext
 */
/**
 * 一类音频处理模块
 *
 * @canNotUse WebAudioContextNode
 */

export { createAudioContext, createInnerAudioContext };
//# sourceMappingURL=index.js.map
