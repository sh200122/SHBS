import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 压缩图片接口，可选压缩质量
 *
 * @canUse compressImage
 * @__object [src, quality, compressedWidth, compressedHeight]
 * @__success [tempFilePath]
 */
const compressImage = (options) => {
    const name = 'compressImage';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { src, quality, compressedWidth, compressedHeight, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    // options.url must be String
    if (typeof src !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'src',
                correct: 'string',
                wrong: src,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.compressImage({
            src: src,
            quality: quality,
            compressedWidth: compressedWidth,
            compressedHeight: compressedHeight,
            success: (res) => {
                const result = {
                    tempFilePath: res.tempFilePath,
                    errMsg: res.errMsg,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { compressImage };
//# sourceMappingURL=compressImage.js.map
