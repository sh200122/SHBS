import Taro from '@tarojs/taro';
/**
 * LivePlayerContext 实例
 *
 * @canUse LivePlayerContext
 * @__class
 * [exitFullScreen, exitPictureInPicture, mute, pause, play, requestFullScreen, requestPictureInPicture, resume,\
 * snapshot, stop]
 */
declare class LivePlayerContext implements Taro.LivePlayerContext {
    LivePlayer: any;
    constructor(LivePlayer: any);
    exitCasting(_option?: Taro.LivePlayerContext.ExitCastingOption | undefined): void;
    exitFullScreen(_option?: Taro.LivePlayerContext.ExitFullScreenOption | undefined): void;
    exitPictureInPicture(_option?: Taro.LivePlayerContext.ExitPictureInPictureOption | undefined): void;
    mute(_option?: Taro.LivePlayerContext.MuteOption | undefined): void;
    pause(_option?: Taro.LivePlayerContext.PauseOption | undefined): void;
    play(_option?: Taro.LivePlayerContext.PlayOption | undefined): void;
    reconnectCasting(_option?: Taro.LivePlayerContext.ReconnectCastingOption | undefined): void;
    requestFullScreen(_option: Taro.LivePlayerContext.RequestFullScreenOption): void;
    requestPictureInPicture(_option: Taro.LivePlayerContext.RequestPictureInPictureOption): void;
    resume(_option?: Taro.LivePlayerContext.ResumeOption | undefined): void;
    snapshot(_option?: Taro.LivePlayerContext.SnapshotOption | undefined): void;
    startCasting(_option?: Taro.LivePlayerContext.StartCastingOption | undefined): void;
    stop(_option?: Taro.LivePlayerContext.StopOption | undefined): void;
    switchCasting(_option?: Taro.LivePlayerContext.SwitchCastingOption | undefined): void;
}
export { LivePlayerContext };
