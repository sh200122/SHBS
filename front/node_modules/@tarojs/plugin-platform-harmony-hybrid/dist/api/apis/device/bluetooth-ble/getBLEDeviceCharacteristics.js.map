{"version":3,"file":"getBLEDeviceCharacteristics.js","sources":["../../../../../src/api/apis/device/bluetooth-ble/getBLEDeviceCharacteristics.ts"],"sourcesContent":["import Taro from '@tarojs/taro'\nimport { getParameterError, shouldBeObject } from 'src/api/apis/utils'\nimport { MethodHandler } from 'src/api/apis/utils/handler'\n\nimport native from '../../NativeApi'\n\n/**\n * 获取蓝牙设备某个服务中所有特征值\n *\n * @canUse getBLEDeviceCharacteristics\n * @__object [deviceId, serviceId]\n * @__success [characteristics]\n */\nexport const getBLEDeviceCharacteristics: typeof Taro.getBLEDeviceCharacteristics = (options) => {\n  const name = 'getBLEDeviceCharacteristics'\n\n  return new Promise((resolve, reject) => {\n    // options must be an Object\n    const isObject = shouldBeObject(options)\n    if (!isObject.flag) {\n      const res = { errMsg: `${name}:fail ${isObject.msg}` }\n      console.error(res.errMsg)\n      return reject(res)\n    }\n    const { deviceId, serviceId, success, fail, complete } = options as Exclude<typeof options, undefined>\n\n    const handle = new MethodHandler<{\n      characteristics?: object\n      errMsg?: string\n    }>({ name, success, fail, complete })\n\n    // options.deviceId must be string\n    if (typeof deviceId !== 'string') {\n      return handle.fail(\n        {\n          errMsg: getParameterError({\n            para: 'deviceId',\n            correct: 'string',\n            wrong: deviceId,\n          }),\n        },\n        { resolve, reject }\n      )\n    }\n\n    if (typeof serviceId !== 'string') {\n      return handle.fail(\n        {\n          errMsg: getParameterError({\n            para: 'serviceId',\n            correct: 'string',\n            wrong: serviceId,\n          }),\n        },\n        { resolve, reject }\n      )\n    }\n\n    native.getBLEDeviceCharacteristics({\n      deviceId: deviceId,\n      serviceId: serviceId,\n      success: (res: any) => {\n        handle.success(res, { resolve, reject })\n      },\n      fail: (err: any) => {\n        handle.fail(err, { resolve, reject })\n      },\n    })\n  })\n}\n"],"names":[],"mappings":";;;;AAMA;;;;;;AAMG;AACU,MAAA,2BAA2B,GAA4C,CAAC,OAAO,KAAI;IAC9F,MAAM,IAAI,GAAG,6BAA6B,CAAA;IAE1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;;AAErC,QAAA,MAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,CAAA;AACxC,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClB,YAAA,MAAM,GAAG,GAAG,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAA,MAAA,EAAS,QAAQ,CAAC,GAAG,CAAA,CAAE,EAAE,CAAA;AACtD,YAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;AACzB,YAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAA;SACnB;AACD,QAAA,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAA6C,CAAA;AAEtG,QAAA,MAAM,MAAM,GAAG,IAAI,aAAa,CAG7B,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAA;;AAGrC,QAAA,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,OAAO,MAAM,CAAC,IAAI,CAChB;gBACE,MAAM,EAAE,iBAAiB,CAAC;AACxB,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,OAAO,EAAE,QAAQ;AACjB,oBAAA,KAAK,EAAE,QAAQ;iBAChB,CAAC;AACH,aAAA,EACD,EAAE,OAAO,EAAE,MAAM,EAAE,CACpB,CAAA;SACF;AAED,QAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,OAAO,MAAM,CAAC,IAAI,CAChB;gBACE,MAAM,EAAE,iBAAiB,CAAC;AACxB,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,OAAO,EAAE,QAAQ;AACjB,oBAAA,KAAK,EAAE,SAAS;iBACjB,CAAC;AACH,aAAA,EACD,EAAE,OAAO,EAAE,MAAM,EAAE,CACpB,CAAA;SACF;QAED,MAAM,CAAC,2BAA2B,CAAC;AACjC,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,SAAS,EAAE,SAAS;AACpB,YAAA,OAAO,EAAE,CAAC,GAAQ,KAAI;gBACpB,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;aACzC;AACD,YAAA,IAAI,EAAE,CAAC,GAAQ,KAAI;gBACjB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;aACtC;AACF,SAAA,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;AACJ;;;;"}