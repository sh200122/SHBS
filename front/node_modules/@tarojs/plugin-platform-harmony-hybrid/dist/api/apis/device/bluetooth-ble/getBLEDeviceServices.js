import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 获取蓝牙设备所有服务(service)
 *
 * @canUse getBLEDeviceServices
 * @__object [deviceId]
 * @__success [services]
 */
const getBLEDeviceServices = (options) => {
    const name = 'getBLEDeviceServices';
    return new Promise((resolve, reject) => {
        // options must be an Object
        const isObject = shouldBeObject(options);
        if (!isObject.flag) {
            const res = { errMsg: `${name}:fail ${isObject.msg}` };
            console.error(res.errMsg);
            return reject(res);
        }
        const { deviceId, success, fail, complete } = options;
        const handle = new MethodHandler({ name, success, fail, complete });
        // options.deviceId must be string
        if (typeof deviceId !== 'string') {
            return handle.fail({
                errMsg: getParameterError({
                    para: 'deviceId',
                    correct: 'string',
                    wrong: deviceId,
                }),
            }, { resolve, reject });
        }
        native.getBLEDeviceServices({
            deviceId: deviceId,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { getBLEDeviceServices };
//# sourceMappingURL=getBLEDeviceServices.js.map
