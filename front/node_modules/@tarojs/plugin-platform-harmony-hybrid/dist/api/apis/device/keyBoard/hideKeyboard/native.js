import native from '../../../NativeApi.js';
import { shouldBeObject } from '../../../utils/index.js';
import { MethodHandler } from '../../../utils/handler.js';

/**
 * 在input、textarea等focus拉起键盘之后，手动调用此接口收起键盘
 *
 * @canUse hideKeyboard
 */
const hideKeyboard = (options) => {
    const name = 'hideKeyboard';
    const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
    if (!isValid) {
        const res = { errMsg: `${name}:fail invalid params` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { success, fail, complete } = options || {};
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        try {
            native.hideKeyboard();
            const result = {
                errMsg: `${name}:ok`,
            };
            handle.success(result, { resolve, reject });
        }
        catch (exception) {
            const result = {
                errMsg: `${name}:fail`,
            };
            handle.fail(result, { resolve, reject });
        }
    });
};

export { hideKeyboard };
//# sourceMappingURL=native.js.map
