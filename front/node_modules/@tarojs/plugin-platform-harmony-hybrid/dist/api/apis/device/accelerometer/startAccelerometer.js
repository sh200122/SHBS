import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 开始监听加速度数据。
 *
 * @canUse startAccelerometer
 * @__object [interval[game, ui, normal]]
 */
const startAccelerometer = (options) => {
    const name = 'startAccelerometer';
    return new Promise((resolve, reject) => {
        const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
        if (!isValid) {
            const res = { errMsg: `${name}:fail invalid params` };
            console.error(res.errMsg);
            return reject(res);
        }
        const { interval = 'normal', success, fail, complete } = options || {};
        const handle = new MethodHandler({ name, success, fail, complete });
        // @ts-ignore
        native.startAccelerometer({
            interval: interval,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (res) => {
                handle.fail(res, { resolve, reject });
            },
        });
    });
};

export { startAccelerometer };
//# sourceMappingURL=startAccelerometer.js.map
