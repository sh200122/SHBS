import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 根据 uuid 获取处于已连接状态的设备
 *
 * @canUse getConnectedBluetoothDevices
 * @__object [services]
 * @__success [devices]
 */
const getConnectedBluetoothDevices = (options) => {
    const name = 'getConnectedBluetoothDevices';
    return new Promise((resolve, reject) => {
        // options must be an Object
        const isObject = shouldBeObject(options);
        if (!isObject.flag) {
            const res = { errMsg: `${name}:fail ${isObject.msg}` };
            console.error(res.errMsg);
            return reject(res);
        }
        const { services, success, fail, complete } = options;
        const handle = new MethodHandler({ name, success, fail, complete });
        native.getConnectedBluetoothDevices({
            services: services,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { getConnectedBluetoothDevices };
//# sourceMappingURL=getConnectedBluetoothDevices.js.map
