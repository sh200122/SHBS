import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 开始监听罗盘数据
 *
 * @canUse startCompass
 */
const startCompass = (options) => {
    const name = 'startCompass';
    return new Promise((resolve, reject) => {
        const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
        if (!isValid) {
            const res = { errMsg: `${name}:fail invalid params` };
            console.error(res.errMsg);
            return reject(res);
        }
        const { success, fail, complete } = options || {};
        const handle = new MethodHandler({ name, success, fail, complete });
        native.startCompass({
            success: () => {
                const result = {
                    errMsg: `${name}:ok`,
                };
                handle.success(result, { resolve, reject });
            },
            fail: () => {
                const result = {
                    errMsg: `${name}:fail`,
                };
                handle.fail(result, { resolve, reject });
            },
        });
    });
};

export { startCompass };
//# sourceMappingURL=startCompass.js.map
