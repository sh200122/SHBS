import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 协商设置蓝牙低功耗的最大传输单元
 *
 * @canUse setBLEMTU
 * @__object [deviceId, mtu]
 * @__success [mtu]
 */
const setBLEMTU = (options) => {
    const name = 'setBLEMTU';
    return new Promise((resolve, reject) => {
        // options must be an Object
        const isObject = shouldBeObject(options);
        if (!isObject.flag) {
            const res = { errMsg: `${name}:fail ${isObject.msg}` };
            console.error(res.errMsg);
            return reject(res);
        }
        const { deviceId, mtu, success, fail, complete } = options;
        const handle = new MethodHandler({ name, success, fail, complete });
        // options.deviceId must be string
        if (typeof deviceId !== 'string') {
            return handle.fail({
                errMsg: getParameterError({
                    para: 'deviceId',
                    correct: 'string',
                    wrong: deviceId,
                }),
            }, { resolve, reject });
        }
        if (typeof mtu !== 'number') {
            return handle.fail({
                errMsg: getParameterError({
                    para: 'mtu',
                    correct: 'number',
                    wrong: mtu,
                }),
            }, { resolve, reject });
        }
        if (mtu > 512 || mtu < 22) {
            console.error('invalid input');
            return handle.fail();
        }
        native.setBLEMTU({
            deviceId: deviceId,
            mtu: mtu,
            success: (res) => {
                const result = {
                    /** 最终协商的 MTU 值，与传入参数一致。 */
                    mtu: `${mtu}`,
                    errMsg: res.errMsg,
                    errCode: res.errCode,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                const result = {
                    /** 最终协商的 MTU 值。协商失败则无此参数。 */
                    mtu: '',
                    errMsg: err.errMsg,
                    errCode: err.errCode,
                };
                handle.fail(result, { resolve, reject });
            },
        });
    });
};

export { setBLEMTU };
//# sourceMappingURL=setBLEMTU.js.map
