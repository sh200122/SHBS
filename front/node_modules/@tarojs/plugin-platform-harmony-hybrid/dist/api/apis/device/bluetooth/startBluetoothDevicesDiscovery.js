import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 开始搜寻附近的蓝牙外围设备
 *
 * @canUse startBluetoothDevicesDiscovery
 * @__object [allowDuplicatesKey, interval, services]
 */
const startBluetoothDevicesDiscovery = (options) => {
    const name = 'startBluetoothDevicesDiscovery';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { allowDuplicatesKey, interval, services, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        native.startBluetoothDevicesDiscovery({
            allowDuplicatesKey: allowDuplicatesKey,
            interval: interval,
            services: services,
            success: (res) => {
                const result = {
                    /** 错误信息 */
                    errMsg: res[0] === 0 ? `${name}:ok` : `${res[0]}`,
                    /** 错误码 */
                    errCode: 0,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { startBluetoothDevicesDiscovery };
//# sourceMappingURL=startBluetoothDevicesDiscovery.js.map
