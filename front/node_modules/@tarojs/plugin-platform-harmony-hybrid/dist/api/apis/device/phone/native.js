import native from '../../NativeApi.js';
import { shouldBeObject, getParameterError } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';

/**
 * 拨打电话
 *
 * @canUse makePhoneCall
 * @__object [phoneNumber]
 */
const makePhoneCall = (options) => {
    const name = 'makePhoneCall';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { phoneNumber, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    if (typeof phoneNumber !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'phoneNumber',
                correct: 'string',
                wrong: phoneNumber,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.makePhoneCall({
            phoneNumber: phoneNumber,
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { makePhoneCall };
//# sourceMappingURL=native.js.map
