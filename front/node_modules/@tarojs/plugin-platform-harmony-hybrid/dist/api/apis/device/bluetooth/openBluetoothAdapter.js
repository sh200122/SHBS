import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 初始化蓝牙模块
 *
 * @canUse openBluetoothAdapter
 */
const openBluetoothAdapter = (options) => {
    const name = 'openBluetoothAdapter';
    const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
    if (!isValid) {
        const res = { errMsg: `${name}:fail invalid params` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { success, fail, complete } = options || {};
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        native.openBluetoothAdapter({
            success: (res) => {
                const result = {
                    /** 错误信息 */
                    errMsg: res[0] === 'ok' ? `${name}:${res[0]}` : `${res[0]}`,
                    /** 错误码 */
                    errCode: 0,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { openBluetoothAdapter };
//# sourceMappingURL=openBluetoothAdapter.js.map
