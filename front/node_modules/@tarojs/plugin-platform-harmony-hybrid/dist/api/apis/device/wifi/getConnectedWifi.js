import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import nativeWifi from './NativeWifi.js';

/**
 * 获取已连接中的 Wi-Fi 信息
 *
 * @canUse getConnectedWifi
 * @__success [wifi]
 */
const getConnectedWifi = (options) => {
    const name = 'getConnectedWifi';
    const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
    if (!isValid) {
        const res = { errMsg: `${name}:fail invalid params` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { success, fail, complete } = options || {};
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        nativeWifi.getConnectedWifi({
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { getConnectedWifi };
//# sourceMappingURL=getConnectedWifi.js.map
