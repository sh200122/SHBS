import { shouldBeObject } from '../../utils/index.js';
import { MethodHandler } from '../../utils/handler.js';
import native from '../../NativeApi.js';

/**
 * 停止监听陀螺仪数据
 *
 * @canUse stopGyroscope
 */
const stopGyroscope = (options) => {
    const name = 'stopGyroscope';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        // @ts-ignore
        native.stopGyroscope({
            success: (res) => {
                handle.success(res, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { stopGyroscope };
//# sourceMappingURL=stopGyroscope.js.map
