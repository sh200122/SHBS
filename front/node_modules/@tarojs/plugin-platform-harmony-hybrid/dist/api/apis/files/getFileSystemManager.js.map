{"version":3,"file":"getFileSystemManager.js","sources":["../../../../src/api/apis/files/getFileSystemManager.ts"],"sourcesContent":["import Taro from '@tarojs/taro'\n\nimport { NativeFileSystemManager } from '../interface/NativeFileSystemManager'\n/**\n * 获取全局唯一的文件管理器\n *\n * @canUse getFileSystemManager\n */\nexport const getFileSystemManager: typeof Taro.getFileSystemManager = () => {\n  return NativeFileSystemManager.getFileSystemManager()\n}\n\n/**\n * 文件管理器\n *\n * @canUse FileSystemManager\n * @__class\n * [access, accessSync, appendFile, appendFileSync, close, closeSync, copyFile, copyFileSync, fstat,\\\n * ftruncate, ftruncateSync, getFileInfo, mkdir, mkdirSync, open, openSync, read, readdir, readdirSync,\\\n * readFile, readFileSync, readSync, rename, renameSync, rmdir, rmdirSync, truncate, truncateSync]\n */\n\n/**\n * 文件读取结果。 通过 FileSystemManager.readSync 接口返回\n *\n * @canUse ReadResult\n * @__class [bytesRead, arrayBuffer]\n */\n\n/**\n * 文件写入结果。 通过 FileSystemManager.writeSync 接口返回\n *\n * @canNotUse WriteResult\n */\n"],"names":[],"mappings":";;AAGA;;;;AAIG;AACI,MAAM,oBAAoB,GAAqC,MAAK;AACzE,IAAA,OAAO,uBAAuB,CAAC,oBAAoB,EAAE,CAAA;AACvD,EAAC;AAED;;;;;;;;AAQG;AAEH;;;;;AAKG;AAEH;;;;AAIG;;;;"}