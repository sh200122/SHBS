import { shouldBeObject, getParameterError } from '../utils/index.js';
import { MethodHandler } from '../utils/handler.js';
import native from '../NativeApi.js';

/**
 * 获取本地文件的文件信息
 *
 * @canUse getSavedFileInfo
 * @__object [filePath]
 * @__success [createTime, size]
 */
const getSavedFileInfo = (options) => {
    const name = 'getSavedFileInfo';
    // options must be an Object
    const isObject = shouldBeObject(options);
    if (!isObject.flag) {
        const res = { errMsg: `${name}:fail ${isObject.msg}` };
        console.error(res.errMsg);
        return Promise.reject(res);
    }
    const { filePath, success, fail, complete } = options;
    const handle = new MethodHandler({ name, success, fail, complete });
    // options.url must be String
    if (typeof filePath !== 'string') {
        return handle.fail({
            errMsg: getParameterError({
                para: 'filePath',
                correct: 'string',
                wrong: filePath,
            }),
        });
    }
    return new Promise((resolve, reject) => {
        native.getSavedFileInfo({
            filePath: filePath,
            success: (res) => {
                const result = {
                    createTime: res.createTime,
                    size: res.size,
                    errMsg: res.errMsg,
                };
                handle.success(result, { resolve, reject });
            },
            fail: (err) => {
                handle.fail(err, { resolve, reject });
            },
        });
    });
};

export { getSavedFileInfo };
//# sourceMappingURL=getSavedFileInfo.js.map
