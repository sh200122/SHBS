import Taro from '@tarojs/api';
declare class NativeFileSystemManager implements Taro.FileSystemManager {
    private static nativeFileSystemManager;
    constructor();
    static getFileSystemManager(): NativeFileSystemManager;
    access(option: any): void;
    getFileInfo(option: any): any;
    readFile(option: any): any;
    readFileSync(filePath: string, encoding?: string, position?: number, length?: number): any;
    accessSync(option: any): any;
    appendFile(option: any): any;
    appendFileSync(option: any): any;
    close(option: any): any;
    closeSync(option: any): any;
    copyFile(option: any): any;
    copyFileSync(option: any): any;
    fstat(option: any): any;
    fstatSync(option: any): any;
    ftruncate(option: any): any;
    ftruncateSync(option: any): any;
    getSavedFileList(option: any): any;
    mkdir(option: any): any;
    mkdirSync(option: any): any;
    open(option: any): any;
    openSync(option: any): any;
    read(option: any): any;
    readCompressedFile(option: any): any;
    readCompressedFileSync(option: any): any;
    readSync(option: any): any;
    readZipEntry(option: any): any;
    readdir(option: any): any;
    readdirSync(option: any): any;
    removeSavedFile(option: any): any;
    rename(option: any): any;
    renameSync(option: any): any;
    rmdir(option: any): any;
    rmdirSync(option: any): any;
    saveFile(option: any): any;
    saveFileSync(option: any): any;
    stat(option: any): any;
    statSync(option: any): any;
    truncate(option: any): any;
    truncateSync(option: any): any;
    unlink(option: any): any;
    unlinkSync(option: any): any;
    unzip(option: any): any;
    write(option: any): any;
    writeFile(option: any): any;
    writeFileSync(option: any): any;
    writeSync(option: any): any;
}
export { NativeFileSystemManager };
