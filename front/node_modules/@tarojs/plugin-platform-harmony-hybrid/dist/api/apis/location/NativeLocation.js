import { __decorate } from '../../../node_modules/.pnpm/tslib@2.6.2/node_modules/tslib/tslib.es6.js';
import { asyncAndRelease, asyncAndNotRelease } from '../harmony-native/ApiDecorator.js';

class NativeLocation {
    chooseLocation(_options) { }
    openLocation(_options) { }
    getFuzzyLocation(_options) { }
    getLocation(_options) { }
    onLocationChange(_options) { }
    offLocationChange(_options) { }
    onLocationChangeError(_options) { }
    offLocationChangeError(_options) { }
    startLocationUpdate(_options) { }
    startLocationUpdateBackground(_options) { }
    stopLocationUpdate(_options) { }
}
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "chooseLocation", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "openLocation", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "getFuzzyLocation", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "getLocation", null);
__decorate([
    asyncAndNotRelease
], NativeLocation.prototype, "onLocationChange", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "offLocationChange", null);
__decorate([
    asyncAndNotRelease
], NativeLocation.prototype, "onLocationChangeError", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "offLocationChangeError", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "startLocationUpdate", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "startLocationUpdateBackground", null);
__decorate([
    asyncAndRelease
], NativeLocation.prototype, "stopLocationUpdate", null);
const nativeLocation = new NativeLocation();

export { nativeLocation as default };
//# sourceMappingURL=NativeLocation.js.map
