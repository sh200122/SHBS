import { shouldBeObject } from '../utils/index.js';
import { MethodHandler } from '../utils/handler.js';
import nativeLocation from './NativeLocation.js';

/**
 * 获取当前的模糊地理位置
 *
 * @canUse getFuzzyLocation
 * @__object [type]
 * @__success [latitude, longitude]
 */
const getFuzzyLocation = (options) => {
    const name = 'getFuzzyLocation';
    const isValid = shouldBeObject(options).flag || typeof options === 'undefined';
    if (!isValid) {
        const res = { errMsg: `${name}:fail invalid params` };
        return Promise.reject(res);
    }
    const { type = 'wgs84', success, fail, complete } = options || {};
    const handle = new MethodHandler({ name, success, fail, complete });
    return new Promise((resolve, reject) => {
        nativeLocation.getLocation({
            type: type,
            isHighAccuracy: false,
            highAccuracyExpireTime: undefined,
            success: (res) => {
                const result = {
                    latitude: res.latitude,
                    longitude: res.longitude,
                    errMsg: ''
                };
                handle.success(result, { resolve, reject });
            },
            fail: (res) => {
                handle.fail(res, { resolve, reject });
            },
        });
    });
};

export { getFuzzyLocation };
//# sourceMappingURL=getFuzzyLocation.js.map
