import { request as request$2, addInterceptor as addInterceptor$2, cleanInterceptors as cleanInterceptors$2 } from '@tarojs/taro-h5';
import { request as request$1, addInterceptor as addInterceptor$1, cleanInterceptors as cleanInterceptors$1 } from './nativeRequest.js';

/**
 * 发起 HTTPS 网络请求
 *
 * @canUse request
 * @__object [url, data, header, timeout, method[OPTIONS, GET, HEAD, POST, PUT, PATCH, DELETE, TRACE, CONNECT], dataType[json, text, base64, arraybuffer], responseType[text, arraybuffer], enableCache]
 * @__success [data, header, statusCode, cookies]
 * @param useNativeRequest 默认使用true
 */
function request(options, useNativeRequest = true) {
    return useNativeRequest ? request$1(options) : request$2(options);
}
/**
 * 网络请求任务对象
 *
 * @canUse RequestTask
 * @__class [abort, onHeadersReceived, offHeadersReceived]
 */
/**
 * 使用拦截器
 *
 * @canUse addInterceptor
 */
function addInterceptor(interceptor, useNativeRequest = true) {
    return useNativeRequest ? addInterceptor$1(interceptor) : addInterceptor$2(interceptor);
}
/**
 * 清除所有拦截器
 *
 * @canUse cleanInterceptors
 */
function cleanInterceptors(interceptor, useNativeRequest = true) {
    return useNativeRequest ? cleanInterceptors$1(interceptor) : cleanInterceptors$2(interceptor);
}

export { addInterceptor, cleanInterceptors, request };
//# sourceMappingURL=index.js.map
