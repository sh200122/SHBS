/**
 * 发起 HTTPS 网络请求
 *
 * @canUse request
 * @__object [url, data, header, timeout, method[OPTIONS, GET, HEAD, POST, PUT, PATCH, DELETE, TRACE, CONNECT], dataType[json, text, base64, arraybuffer], responseType[text, arraybuffer], enableCache]
 * @__success [data, header, statusCode, cookies]
 * @param useNativeRequest 默认使用true
 */
declare function request(options: any, useNativeRequest?: boolean): any;
/**
 * 网络请求任务对象
 *
 * @canUse RequestTask
 * @__class [abort, onHeadersReceived, offHeadersReceived]
 */
/**
 * 使用拦截器
 *
 * @canUse addInterceptor
 */
declare function addInterceptor(interceptor: any, useNativeRequest?: boolean): any;
/**
 * 清除所有拦截器
 *
 * @canUse cleanInterceptors
 */
declare function cleanInterceptors(interceptor: any, useNativeRequest?: boolean): any;
export { request, addInterceptor, cleanInterceptors };
