{"version":3,"file":"NativeApiSyncCacheProxy.js","sources":["../../../src/api/apis/NativeApiSyncCacheProxy.ts"],"sourcesContent":["export class NativeDataCache {\n  private cache = new Map<string, any>()\n\n  keys (): string[] {\n    return Array.from(this.cache.keys())\n  }\n\n  set (key: string, value: any) {\n    this.cache.set(key, value)\n  }\n\n  get (key: string) {\n    return this.cache.get(key)\n  }\n\n  delete (key: string): boolean {\n    return this.cache.delete(key)\n  }\n\n  has (key: string): boolean {\n    return this.cache.has(key)\n  }\n}\n\n/**\n * 系统数据更新监听器\n */\nexport interface NativeDataChangeListener {\n  /**\n   * 更新\n   * @param methodName    要更新的方法名\n   * @param methodArgs    要更新的方法参数，如果是空参，直接传[]\n   */\n  change: (methodName: string, methodArgs: any[]) => void\n  /**\n   * 注册\n   * @param methodName    要注册的方法名列表\n   */\n  register: (methodNames: string[]) => void\n  /**\n   * 解注册\n   * @param methodName    要解注册的方法名列表\n   */\n  unregister:(methodNames: string[]) => void\n\n}\n\n/**\n * 同步数据缓存ProxyHandler\n */\nexport class SyncCacheProxyHandler {\n  private readonly nativeApi: any\n  private readonly listener: NativeDataChangeListener\n  private readonly cache: NativeDataCache\n  private enableMethodNames: Set<string> = new Set<string>()\n\n  constructor (nativeApi: any) {\n    this.nativeApi = nativeApi\n    this.cache = new NativeDataCache()\n    // 绑定类的this到self变量\n    const self = this\n    // 监听Native数据变化\n    this.listener = {\n      register: (methodNames: string[]) => {\n        methodNames.forEach((name: string) => {\n          self.enableMethodNames.add(name)\n        })\n      },\n      unregister: (methodNames: string[]) => {\n        methodNames.forEach((name: string) => {\n          self.enableMethodNames.delete(name)\n        })\n      },\n      change: (methodName: string, methodArgs: any[]) => {\n        if (self.enableMethodNames.has(methodName)) {\n          self.updateNativeData(self.cache, methodName, methodArgs)\n        }\n      }\n    }\n    this.nativeApi.registerNativeListener(this.listener)\n  }\n\n  /**\n   * 更新Native数据\n   * @param cache         缓存数据\n   * @param methodName    要更新的方法名\n   * @param methodArgs    要更新的方法参数\n   */\n  private updateNativeData (cache: NativeDataCache, methodName: string, methodArgs: any[]) {\n    const cacheKey = this.generateCacheKey(methodName, methodArgs)\n    // 删除该key对应的数据\n    cache.delete(cacheKey)\n    // 获取到methodName对应的方法\n    const fun = (this.nativeApi as any)[methodName] as (...args: any[]) => any\n    // 方法存在，可以安全调用，并传入参数\n    if (typeof fun === 'function') {\n      const result = fun(...methodArgs)\n      // 结果存入缓存\n      if (result) {\n        this.cache.set(cacheKey, result)\n      }\n    }\n  }\n\n  /**\n   * 生成cache的存储key\n   * @param methodName    方法名\n   * @param methodArgs    方法参数\n   */\n  private generateCacheKey (methodName: string, methodArgs: any[]): string {\n    return `${methodName}_${JSON.stringify(methodArgs)}`\n  }\n\n  get (target: any, propKey: string | symbol, receiver: any) {\n    const origMethod = Reflect.get(target, propKey, receiver)\n    const methodName = `${String(propKey)}`\n    if (typeof origMethod === 'function' && this.enableMethodNames.has(methodName)) {\n      return (...args: any[]) => {\n        const cacheKey = this.generateCacheKey(`${String(propKey)}`, args)\n        if (this.cache.has(cacheKey)) {\n          return this.cache.get(cacheKey)\n        } else {\n          const result = origMethod.apply(target, args)\n          if (result) {\n            // 有效值才存入，null或者undefined存入cache没有意义\n            this.cache.set(cacheKey, result)\n          }\n          return result\n        }\n      }\n    }\n    return origMethod\n  }\n}\n"],"names":[],"mappings":"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"}