{"version":3,"file":"index.js","sources":["../../src/api/index.ts"],"sourcesContent":["import taro from './apis/taro'\n\nexport * from './apis/index'\nexport * from './apis/taro'\n\nexport default taro\n\nfunction safeStringify (obj) {\n  try {\n    return JSON.stringify(obj, null, 2)\n  } catch (error) {\n    // 在处理非法输入时捕获异常\n    return String(obj) // 返回原始值的字符串表示形式\n  }\n}\n\nfunction logFun (funObj, message) {\n  return new Proxy(funObj, {\n    apply (target, thisArg, args) {\n      // eslint-disable-next-line no-console\n      console.debug('%s, 参数为: %s', message, safeStringify(args))\n      return target.apply(thisArg, args)\n    },\n  })\n}\n\nfunction logObj (obj) {\n  return new Proxy(obj, {\n    get (target, property) {\n      if (typeof target[property] !== 'function') {\n        const value = target[property]\n        // @ts-ignore\n        // eslint-disable-next-line no-console\n        console.debug('调用 native %o property，结果为：%s ', property, safeStringify(value))\n        return value\n      }\n\n      return function (...args) {\n        // @ts-ignore\n        let log = `调用 native.${property} 方法`\n\n        if (args && args[0]) {\n          log = `${log}, 参数为${safeStringify(args[0])}`\n\n          if (typeof args[0].success === 'function') {\n            // @ts-ignore\n            args[0].success = logFun(args[0].success, `${log} success回调结果`)\n          }\n          if (typeof args[0].fail === 'function') {\n            // @ts-ignore\n            args[0].fail = logFun(args[0].fail, `${log} fail回调结果`)\n          }\n        }\n\n        const result = target[property].apply(this, args)\n        // eslint-disable-next-line no-console\n        console.debug('%s, 返回值为: %s', log, safeStringify(result))\n        return result\n      }\n    },\n  })\n}\n\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\n  console.warn(`当前为development阶段，输出所有原生Api的调用日志。`)\n  // @ts-ignore\n  window.native = logObj(window.native || {})\n}\n"],"names":[],"mappings":"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"}