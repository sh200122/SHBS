import {
  getCompilerContext
} from "./chunk-3ZZRMLDI.mjs";
import "./chunk-Q67IXIAH.mjs";
import "./chunk-5LMCSUNK.mjs";
import "./chunk-JXBLHLFR.mjs";
import "./chunk-24KAG666.mjs";

// src/core.ts
import { defuOverrideArray } from "@weapp-tailwindcss/shared";
function createContext(options = {}) {
  const opts = getCompilerContext(options);
  const { templateHandler, styleHandler, jsHandler, twPatcher } = opts;
  let runtimeSet = /* @__PURE__ */ new Set();
  twPatcher.patch();
  function transformWxss(rawCss, options2) {
    return styleHandler(rawCss, defuOverrideArray(options2, {
      isMainChunk: true
    }));
  }
  async function transformJs(rawJs, options2 = {}) {
    runtimeSet = options2 && options2.runtimeSet ? options2.runtimeSet : await twPatcher.getClassSet();
    return await jsHandler(rawJs, runtimeSet, options2);
  }
  function transformWxml(rawWxml, options2) {
    return templateHandler(rawWxml, defuOverrideArray(options2, {
      runtimeSet
    }));
  }
  return {
    transformWxss,
    transformWxml,
    transformJs
  };
}
export {
  createContext
};
