{"version":3,"file":"pages/cart/index.js","mappingssources":["webpack://myApp/./src/pages/cart/index.tsx?4a72","webpack://myApp/._src_pages_cart_index.tsx"],"sourcesContent":["import { View, Text, ScrollView } from \"@tarojs/components\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport Taro from \"@tarojs/taro\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Order() {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // 获取订单列表\n  const fetchOrders = async () => {\n    try {\n      const token = Taro.getStorageSync(\"token\");\n      const res = await Taro.request({\n        url: \"http://localhost:5000/api/orders\",\n        method: \"GET\",\n        header: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.statusCode === 200) {\n        setOrders(res.data);\n      }\n    } catch (error) {\n      console.error(\"获取订单列表失败:\", error);\n      Taro.showToast({\n        title: \"获取订单失败\",\n        icon: \"error\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 更新订单状态\n  const handleUpdateStatus = async (orderId, newStatus) => {\n    try {\n      const token = Taro.getStorageSync(\"token\");\n      const res = await Taro.request({\n        url: `http://localhost:5000/api/orders/${orderId}/status`,\n        method: \"PUT\",\n        data: {\n          status: newStatus\n        },\n        header: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.statusCode === 200) {\n        Taro.showToast({\n          title: \"更新成功\",\n          icon: \"success\"\n        });\n        fetchOrders(); // 刷新订单列表\n      }\n    } catch (error) {\n      console.error(\"更新订单状态失败:\", error);\n      Taro.showToast({\n        title: \"更新失败\",\n        icon: \"error\"\n      });\n    }\n  };\n  const formatTime = time => {\n    const date = new Date(time);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const hour = date.getHours().toString().padStart(2, \"0\");\n    const minute = date.getMinutes().toString().padStart(2, \"0\");\n    return `${year}年${month}月${day}日 ${hour}:${minute}`;\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case \"待付款\":\n        return \"text-orange-500\";\n      case \"待发货\":\n        return \"text-blue-500\";\n      case \"已发货\":\n        return \"text-green-500\";\n      case \"已完成\":\n        return \"text-gray-500\";\n      default:\n        return \"text-gray-700\";\n    }\n  };\n  return /*#__PURE__*/_jsxs(View, {\n    className: \"h-screen w-screen\",\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(ScrollView, {\n      className: \"fixed top-[11%] h-[80.4%] bg-gray-100 flex flex-col overflow-y-scroll p-4 w-full\",\n      scrollY: true,\n      enableFlex: true,\n      children: loading ? /*#__PURE__*/_jsx(View, {\n        className: \"flex items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsx(Text, {\n          className: \"text-gray-500\",\n          children: \"\\u52A0\\u8F7D\\u4E2D...\"\n        })\n      }) : orders.length === 0 ? /*#__PURE__*/_jsx(View, {\n        className: \"flex items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsx(Text, {\n          className: \"text-gray-500\",\n          children: \"\\u6682\\u65E0\\u8BA2\\u5355\"\n        })\n      }) : orders.map(order => /*#__PURE__*/_jsxs(View, {\n        className: \"bg-white rounded-lg shadow mb-4 p-4 w-11/12\",\n        children: [/*#__PURE__*/_jsxs(View, {\n          className: \"flex justify-between items-center border-b border-gray-200 pb-2\",\n          children: [/*#__PURE__*/_jsxs(Text, {\n            className: \"text-gray-600\",\n            children: [\"\\u8BA2\\u5355\\u53F7\\uFF1A\", order.orderNo]\n          }), /*#__PURE__*/_jsx(Text, {\n            className: `${getStatusColor(order.status)} font-medium`,\n            children: order.status\n          })]\n        }), order.products.map(product => /*#__PURE__*/_jsxs(View, {\n          className: \"py-2 border-b border-gray-100\",\n          children: [/*#__PURE__*/_jsx(Text, {\n            className: \"text-gray-800\",\n            children: product.name\n          }), /*#__PURE__*/_jsxs(View, {\n            className: \"flex justify-between mt-1\",\n            children: [/*#__PURE__*/_jsxs(Text, {\n              className: \"text-gray-600\",\n              children: [\"\\xA5\", product.price]\n            }), /*#__PURE__*/_jsxs(Text, {\n              className: \"text-gray-600\",\n              children: [\"x\", product.quantity]\n            })]\n          })]\n        }, product.id)), /*#__PURE__*/_jsxs(View, {\n          className: \"mt-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsx(Text, {\n            className: \"text-gray-600\",\n            children: formatTime(order.createTime)\n          }), /*#__PURE__*/_jsxs(Text, {\n            className: \"font-medium\",\n            children: [\"\\u603B\\u8BA1\\uFF1A\\xA5\", order.totalAmount]\n          })]\n        }), order.status === \"待发货\" && /*#__PURE__*/_jsx(View, {\n          className: \"mt-3 flex justify-end\",\n          children: /*#__PURE__*/_jsx(View, {\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-lg\",\n            onClick: () => handleUpdateStatus(order._id, \"已发货\"),\n            children: /*#__PURE__*/_jsx(Text, {\n              children: \"\\u53D1\\u8D27\"\n            })\n          })\n        })]\n      }, order._id))\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/cart/index!./index.tsx\"\nvar config = {};\n\n\n\nvar taroOption = createPageConfig(component, 'pages/cart/index', {root:{cn:[]}}, config || {})\nif (component && component.behaviors) {\n  taroOption.behaviors = (taroOption.behaviors || []).concat(component.behaviors)\n}\nvar inst = Page(taroOption)\n\n\n\nexport default component\n"],"names":[],"sourceRoot":""}