{"version":3,"file":"pages/person/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://myApp/./src/pages/person/index.tsx?6f46","webpack://myApp/._src_pages_person_index.tsx"],"sourcesContent":["import { View, Text, Button, ScrollView } from \"@tarojs/components\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport Taro, { useDidShow } from \"@tarojs/taro\";\nimport { logout } from \"@/utils/auth\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Setting() {\n  const [selectedOrderType, setSelectedOrderType] = useState(\"待发货\");\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const orderTypes = [{\n    id: 1,\n    name: \"待发货\",\n    icon: \"📦\"\n  }, {\n    id: 2,\n    name: \"待收货\",\n    icon: \"🚚\"\n  }, {\n    id: 3,\n    name: \"已完成\",\n    icon: \"✅\"\n  }, {\n    id: 4,\n    name: \"全部订单\",\n    icon: \"📋\"\n  }];\n\n  // 获取用户订单\n  const fetchUserOrders = async () => {\n    setLoading(true);\n    try {\n      const token = Taro.getStorageSync(\"token\");\n      if (!token) {\n        Taro.showToast({\n          title: \"请先登录\",\n          icon: \"error\",\n          duration: 2000\n        });\n        return;\n      }\n      const response = await Taro.request({\n        url: \"http://localhost:5000/api/orders/user\",\n        method: \"GET\",\n        header: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setOrders(response.data.data);\n      } else {\n        throw new Error(response.data.message || \"获取订单失败\");\n      }\n    } catch (error) {\n      console.error(\"获取订单失败:\", error);\n      Taro.showToast({\n        title: \"获取订单失败\",\n        icon: \"error\",\n        duration: 2000\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 页面加载时获取订单\n  useEffect(() => {\n    fetchUserOrders();\n  }, []);\n\n  // 每次页面显示时刷新订单\n  useDidShow(() => {\n    fetchUserOrders();\n  });\n\n  // 处理订单类型切换\n  const handleOrderTypeClick = orderName => {\n    setSelectedOrderType(orderName);\n  };\n\n  // 处理退出登录\n  const handleLogout = () => {\n    logout();\n    setTimeout(() => {\n      Taro.reLaunch({\n        url: \"/pages/login/index\"\n      });\n    }, 1000);\n  };\n\n  // 筛选订单\n  const filteredOrders = orders.filter(order => {\n    if (selectedOrderType === \"全部订单\") {\n      return true;\n    }\n    return order.status === selectedOrderType;\n  });\n\n  // 获取状态对应的颜色\n  const getStatusColor = status => {\n    switch (status) {\n      case \"待发货\":\n        return \"text-blue-500\";\n      case \"待收货\":\n        return \"text-green-500\";\n      case \"已完成\":\n        return \"text-gray-500\";\n      case \"已取消\":\n        return \"text-red-500\";\n      default:\n        return \"text-gray-700\";\n    }\n  };\n\n  // 处理确认收货\n  const handleConfirmReceipt = async orderId => {\n    try {\n      const token = Taro.getStorageSync(\"token\");\n      if (!token) {\n        Taro.showToast({\n          title: \"请先登录\",\n          icon: \"error\",\n          duration: 2000\n        });\n        return;\n      }\n      Taro.showModal({\n        title: \"确认收货\",\n        content: \"确定要确认收货吗？\",\n        success: async res => {\n          if (res.confirm) {\n            try {\n              const response = await Taro.request({\n                url: `http://localhost:5000/api/orders/${orderId}/confirm`,\n                method: \"PUT\",\n                header: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              if (response.data.success) {\n                Taro.showToast({\n                  title: \"确认收货成功\",\n                  icon: \"success\",\n                  duration: 2000\n                });\n                // 刷新订单列表\n                fetchUserOrders();\n              } else {\n                throw new Error(response.data.message || \"确认收货失败\");\n              }\n            } catch (error) {\n              console.error(\"确认收货失败:\", error);\n              Taro.showToast({\n                title: \"确认收货失败\",\n                icon: \"error\",\n                duration: 2000\n              });\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"确认收货操作失败:\", error);\n      Taro.showToast({\n        title: \"操作失败\",\n        icon: \"error\",\n        duration: 2000\n      });\n    }\n  };\n\n  // 处理取消订单\n  const handleCancelOrder = async orderId => {\n    try {\n      const token = Taro.getStorageSync(\"token\");\n      if (!token) {\n        Taro.showToast({\n          title: \"请先登录\",\n          icon: \"error\",\n          duration: 2000\n        });\n        return;\n      }\n      Taro.showModal({\n        title: \"取消订单\",\n        content: \"确定要取消该订单吗？\",\n        success: async res => {\n          if (res.confirm) {\n            try {\n              const response = await Taro.request({\n                url: `http://localhost:5000/api/orders/${orderId}/cancel`,\n                method: \"PUT\",\n                header: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              if (response.data.success) {\n                Taro.showToast({\n                  title: \"取消订单成功\",\n                  icon: \"success\",\n                  duration: 2000\n                });\n                // 刷新订单列表\n                fetchUserOrders();\n              } else {\n                throw new Error(response.data.message || \"取消订单失败\");\n              }\n            } catch (error) {\n              console.error(\"取消订单失败:\", error);\n              Taro.showToast({\n                title: \"取消订单失败\",\n                icon: \"error\",\n                duration: 2000\n              });\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"取消订单操作失败:\", error);\n      Taro.showToast({\n        title: \"操作失败\",\n        icon: \"error\",\n        duration: 2000\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxs(View, {\n    className: \"h-screen w-screen\",\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(View, {\n      className: \"fixed top-[11%] h-[84%] bg-gray-100 w-full p-4\",\n      children: /*#__PURE__*/_jsxs(View, {\n        className: \"bg-white rounded-lg shadow p-6 max-w-md mx-auto flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsx(Text, {\n          className: \"text-lg font-bold mb-4\",\n          children: \"\\u5FAE\\u4FE1\\u7528\\u6237:\"\n        }), /*#__PURE__*/_jsxs(Text, {\n          className: \"mb-4\",\n          children: [\"VX\", Taro.getStorageSync(\"userId\")]\n        }), /*#__PURE__*/_jsx(Button, {\n          formType: \"submit\",\n          className: \"bg-red-500 text-white rounded-md w-full\",\n          hoverClass: \"bg-red-600\",\n          onClick: handleLogout,\n          children: \"\\u9000\\u51FA\\u767B\\u5F55\"\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(View, {\n      className: \"bg-white p-4 fixed top-[36%] w-full rounded-lg\",\n      children: [/*#__PURE__*/_jsx(Text, {\n        className: \"text-lg font-bold\",\n        children: \"\\u6211\\u7684\\u8BA2\\u5355\"\n      }), /*#__PURE__*/_jsx(View, {\n        className: \"grid grid-cols-4 gap-4 mt-4\",\n        children: orderTypes.map(order => /*#__PURE__*/_jsxs(View, {\n          className: `flex flex-col items-center justify-center p-2 rounded-lg cursor-pointer ${selectedOrderType === order.name ? \"bg-yellow-100 text-yellow-600\" : \"bg-gray-50\"}`,\n          onClick: () => handleOrderTypeClick(order.name),\n          children: [/*#__PURE__*/_jsx(Text, {\n            className: \"text-2xl mb-1\",\n            children: order.icon\n          }), /*#__PURE__*/_jsx(Text, {\n            className: \"text-sm\",\n            children: order.name\n          })]\n        }, order.id))\n      })]\n    }), /*#__PURE__*/_jsxs(ScrollView, {\n      className: \"fixed bottom-[5%] w-[94%] h-[42%] bg-white rounded-lg px-4\",\n      scrollY: true,\n      enableFlex: true,\n      children: [loading ? /*#__PURE__*/_jsx(View, {\n        className: \"flex items-center justify-center h-32\",\n        children: /*#__PURE__*/_jsx(Text, {\n          className: \"text-gray-500\",\n          children: \"\\u52A0\\u8F7D\\u4E2D...\"\n        })\n      }) : filteredOrders.length === 0 ? /*#__PURE__*/_jsx(View, {\n        className: \"flex items-center justify-center h-32\",\n        children: /*#__PURE__*/_jsxs(Text, {\n          className: \"text-gray-500\",\n          children: [\"\\u6682\\u65E0\", selectedOrderType === \"全部订单\" ? \"\" : selectedOrderType, \"\\u8BA2\\u5355\"]\n        })\n      }) : filteredOrders.map(order => /*#__PURE__*/_jsxs(View, {\n        className: \"bg-white rounded-lg p-4 mb-4 mr-3 shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxs(View, {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxs(Text, {\n            className: \"text-sm text-gray-500\",\n            children: [\"\\u8BA2\\u5355\\u53F7\\uFF1A\", order.orderNo]\n          }), /*#__PURE__*/_jsx(Text, {\n            className: `${getStatusColor(order.status)}`,\n            children: order.status\n          })]\n        }), /*#__PURE__*/_jsx(View, {\n          className: \"border-t border-b border-gray-100 py-3 my-2\",\n          children: /*#__PURE__*/_jsxs(View, {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsx(Text, {\n              className: \"text-base font-medium\",\n              children: order.name\n            }), /*#__PURE__*/_jsxs(Text, {\n              className: \"text-sm\",\n              children: [\"x\", order.quantity]\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(View, {\n          className: \"flex justify-between items-center mt-2\",\n          children: [/*#__PURE__*/_jsx(Text, {\n            className: \"text-sm text-gray-500\",\n            children: new Date(order.createTime).toLocaleString()\n          }), /*#__PURE__*/_jsxs(Text, {\n            className: \"text-lg font-medium text-primary\",\n            children: [\"\\xA5\", order.totalAmount.toFixed(2)]\n          })]\n        }), order.status === \"待收货\" && /*#__PURE__*/_jsxs(View, {\n          className: \"flex justify-between mt-3\",\n          children: [/*#__PURE__*/_jsx(Button, {\n            className: \"bg-green-500 text-white rounded flex-1 mr-2\",\n            onClick: () => {\n              handleConfirmReceipt(order._id);\n            },\n            children: \"\\u786E\\u8BA4\\u6536\\u8D27\"\n          }), /*#__PURE__*/_jsx(Button, {\n            className: \"bg-red-500 text-white rounded flex-1\",\n            onClick: () => {\n              handleCancelOrder(order._id);\n            },\n            children: \"\\u53D6\\u6D88\\u8BA2\\u5355\"\n          })]\n        }), order.status === \"待发货\" && /*#__PURE__*/_jsx(Button, {\n          className: \"bg-red-500 text-white mt-3 rounded\",\n          onClick: () => {\n            handleCancelOrder(order._id);\n          },\n          children: \"\\u53D6\\u6D88\\u8BA2\\u5355\"\n        })]\n      }, order._id)), /*#__PURE__*/_jsx(View, {\n        className: \"h-6\"\n      })]\n    }), /*#__PURE__*/_jsx(Footer, {})]\n  });\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/person/index!./index.tsx\"\nvar config = {};\n\n\n\nvar taroOption = createPageConfig(component, 'pages/person/index', {root:{cn:[]}}, config || {})\nif (component && component.behaviors) {\n  taroOption.behaviors = (taroOption.behaviors || []).concat(component.behaviors)\n}\nvar inst = Page(taroOption)\n\n\n\nexport default component\n"],"names":[],"sourceRoot":""}